{"remainingRequest":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\babel-loader\\lib\\index.js!D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project\\spiderPlatform\\spider_platform\\src\\pages\\proj_manage\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project\\spiderPlatform\\spider_platform\\src\\pages\\proj_manage\\index.vue","mtime":1653117213591},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646988157970},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\babel-loader\\lib\\index.js","mtime":1646988157969},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646988157970},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\index.js","mtime":1646988174758}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJEOi9Qcm9qZWN0L3NwaWRlclBsYXRmb3JtL3NwaWRlcl9wbGF0Zm9ybS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L1Byb2plY3Qvc3BpZGVyUGxhdGZvcm0vc3BpZGVyX3BsYXRmb3JtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgTUVUSE9ELCByZXF1ZXN0IH0gZnJvbSAnQC91dGlscy9yZXF1ZXN0JzsKaW1wb3J0IHsgQUREX0hPVF9TUElERVIsIEFERF9LRVlXT1JELCBDT05URU5UX1NQSURFUiwgR0VUX0FDQ09VTlRfSU5GTywgR0VUX0FMTF9DT05URU5UX1NQSURFUiwgR0VUX0NVU1RPTV9LRVlXT1JEUywgR0VUX0RFVklDRV9JTkZPLCBHRVRfSE9UX1NQSURFUiwgR0VUX1BST0pFQ1RTX0lORk8sIFBBVVNFX1RJTUlORywgUk1fSE9UX1NQSURFUiwgU1BJREVSX0RFTF9BREQsIFNQSURFUl9TVEFUVVMsIFNUQVJUX1RJTUlORywgVVBEQVRFX1BST19BQ0NPVU5ULCBVUERBVEVfUFJPSkVDVF9ERVZJQ0UsIFVQREFURV9USU1JTkdfSk9CLCBTUElERVJfTU9OSVRPUiwgQ1JFQVRFX1BST0osIERFTF9QUk9KLCBET1dOTE9BRF9VU0VSLCBET1dOTE9BRF9ORVdTIH0gZnJvbSAnQC9zZXJ2aWNlcy9hcGknOwppbXBvcnQgKiBhcyBlY2hhcnRzIGZyb20gImVjaGFydHMiOyAvLyBpbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdwcm9qX21hbmFnZScsCiAgaTE4bjogcmVxdWlyZSgnLi9pMThuJyksCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRvd25sb2FkTmV3c0RhdGFTZWxlY3Q6ICIiLAogICAgICBkb3dubG9hZE5ld3NEYXRhTG9hZGluZzogZmFsc2UsCiAgICAgIGRvd25sb2FkVXNlckRhdGFMb2FkaW5nOiBmYWxzZSwKICAgICAgZG93bmxvYWRVc2VyRGF0YVZpc2libGU6IGZhbHNlLAogICAgICBkb3dubG9hZE5ld3NEYXRhVmlzaWJsZTogZmFsc2UsCiAgICAgIG5hbWVGb3JQcm9qZWN0OiAnJywKICAgICAgYXV0aG9yRm9yUHJvamVjdDogJycsCiAgICAgIGFkZFNwaWRlcjogW10sCiAgICAgIGFkZFNwaWRlckxpc3Q6IFtdLAogICAgICBub3dQcm9qZWN0OiAnJywKICAgICAgZWRpdF9zcGlkZXJfaW5kZXg6IG51bGwsCiAgICAgIGVkaXRfc3BpZGVyX3JvdzogbnVsbCwKICAgICAgc3BpZGVyX2lzX3N0YXJ0OiB0cnVlLAogICAgICBhY3RpdmVOYW1lOiAnZmlyc3QnLAogICAgICBzcGlkZXJfcGFnZVNpemU6IDcsCiAgICAgIHNwaWRlcl9jdXJyZW50UGFnZTogMSwKICAgICAgc3BpZGVyX3RvdGFsOiA0LAogICAgICBzcGlkZXJfdGFibGVEYXRhOiBbXSwKICAgICAgc3BpZGVyX2NyZWF0ZURpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICBzcGlkZXJfZWRpdERpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICBhbGxIb3RTcGlkZXJzOiBbXSwKICAgICAgYWxsS2V5d29yZHNGb3JQcm9qZWN0OiBbXSwKICAgICAgbmV3SG90U3BpZGVyRm9yUHJvamVjdDogIiIsCiAgICAgIHByb2plY3RIb3RTcGlkZXJzOiBbXSwKICAgICAgaXNBZGRLZXl3b3JkQnRuVmlzaWJsZTogZmFsc2UsCiAgICAgIGlzQWRkSG90U3BpZGVyQnRuVmlzaWJsZTogZmFsc2UsCiAgICAgIG5ld1RpdGxlRm9yUHJvamVjdDogIiIsCiAgICAgIG5ld0tleXdvcmRGb3JQcm9qZWN0OiAiIiwKICAgICAgaXNBZGRUaW1lZFRhc2tCdG5WaXNpYmxlOiBmYWxzZSwKICAgICAgaXNBZGREaXN0RXF1aXBCdG5WaXNpYmxlOiBmYWxzZSwKICAgICAgaXNDcmVhdGVQcm9qZWN0QnRuVmlzaWJsZTogZmFsc2UsCiAgICAgIGlzQWRkUGxhdGZvcm1BY2NvdW50c0J0blZpc2libGU6IGZhbHNlLAogICAgICBhbGxQcm9qZWN0OiBbXSwKICAgICAgY3VycmVudFByb2plY3Q6IG51bGwsCiAgICAgIG5ld0Rpc3RFcXVpcElwOiAiIiwKICAgICAgYWxsRGlzdEVxdWlwOiBbXSwKICAgICAgZGlzdEVxdWlwc0Zyb1BvajogewogICAgICAgIHByb2plY3ROYW1lOiAiIiwKICAgICAgICBkaXN0RXF1aXBzOiBbXQogICAgICB9LAogICAgICB0aW1pbmdUYXNrOiB7fSwKICAgICAgYWxsU2NoZWR1bGVUYXNrOiBbXSwKICAgICAgcHJvamVjdEFjY291bnRzOiBbXSwKICAgICAgYWxsQWNjb3VudHM6IFtdLAogICAgICBuZXdQcm9qZWN0QWNjb3VudDogIiIsCiAgICAgIHNwaWRlclN0YXR1czogewogICAgICAgIHN0YXJ0VGltZTogIiIsCiAgICAgICAgZW5kVGltZTogIiIsCiAgICAgICAgY2xvc2VkUmVhc29uOiAiIgogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZG93bmxvYWROZXdzRGF0YTogZnVuY3Rpb24gZG93bmxvYWROZXdzRGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuZG93bmxvYWROZXdzRGF0YUxvYWRpbmcgPSB0cnVlOwogICAgICByZXF1ZXN0KERPV05MT0FEX05FV1MsIE1FVEhPRC5QT1NULCB7CiAgICAgICAgcHJvamVjdF9uYW1lOiB0aGlzLmRvd25sb2FkTmV3c0RhdGFTZWxlY3QKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIGRhdGEgPSByZXMuZGF0YTsgLy8gbGV0IHVybCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGRhdGEpCgogICAgICAgIHZhciBiaW5hcnlEYXRhID0gW107CiAgICAgICAgYmluYXJ5RGF0YS5wdXNoKGRhdGEpOwogICAgICAgIHZhciB1cmwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChuZXcgQmxvYihiaW5hcnlEYXRhKSk7CiAgICAgICAgdmFyIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTsKICAgICAgICBhLmhyZWYgPSB1cmw7CiAgICAgICAgYS5kb3dubG9hZCA9ICduZXdzX3Jhd2RhdGEuY3N2JzsKICAgICAgICBhLmNsaWNrKCk7CiAgICAgICAgd2luZG93LlVSTC5yZXZva2VPYmplY3RVUkwodXJsKTsKICAgICAgICBfdGhpcy5kb3dubG9hZE5ld3NEYXRhTG9hZGluZyA9IGZhbHNlOwogICAgICAgIF90aGlzLmRvd25sb2FkTmV3c0RhdGFWaXNpYmxlID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGRvd25sb2FkVXNlckRhdGE6IGZ1bmN0aW9uIGRvd25sb2FkVXNlckRhdGEoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5kb3dubG9hZFVzZXJEYXRhTG9hZGluZyA9IHRydWU7CiAgICAgIHJlcXVlc3QoRE9XTkxPQURfVVNFUiwgTUVUSE9ELkdFVCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIGRhdGEgPSByZXMuZGF0YTsgLy8gbGV0IHVybCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGRhdGEpCgogICAgICAgIHZhciBiaW5hcnlEYXRhID0gW107CiAgICAgICAgYmluYXJ5RGF0YS5wdXNoKGRhdGEpOwogICAgICAgIHZhciB1cmwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChuZXcgQmxvYihiaW5hcnlEYXRhKSk7CiAgICAgICAgdmFyIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTsKICAgICAgICBhLmhyZWYgPSB1cmw7CiAgICAgICAgYS5kb3dubG9hZCA9ICd1c2Vyc19yYXdkYXRhLmNzdic7CiAgICAgICAgYS5jbGljaygpOwogICAgICAgIHdpbmRvdy5VUkwucmV2b2tlT2JqZWN0VVJMKHVybCk7CiAgICAgICAgX3RoaXMyLmRvd25sb2FkVXNlckRhdGFMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgX3RoaXMyLmRvd25sb2FkVXNlckRhdGFWaXNpYmxlID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGRlbFByb2plY3Q6IGZ1bmN0aW9uIGRlbFByb2plY3QoaW5kZXgsIHJvdykgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHRoaXMuJGNvbmZpcm0oJ+atpOaTjeS9nOWwhuWIoOmZpOivpemhueebriwg5piv5ZCm57un57utPycsICfmj5DnpLonLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIHR5cGU6ICd3YXJuaW5nJywKICAgICAgICBjZW50ZXI6IHRydWUKICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgcmVxdWVzdChERUxfUFJPSiwgTUVUSE9ELlBPU1QsIHsKICAgICAgICAgIHByb2plY3RfbmFtZTogcm93Lm5hbWUKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIGlmIChyZXMuZGF0YS5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgX3RoaXMzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgbWVzc2FnZTogJ+WIoOmZpOaIkOWKnyEnCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX3RoaXMzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICB0eXBlOiAnd2FybmluZycsCiAgICAgICAgICAgICAgbWVzc2FnZTogJ+WIoOmZpOWksei0pScKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CgogICAgICAgICAgX3RoaXMzLnF1ZXJ5UHJvamVjdHMoKTsKICAgICAgICB9KTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMy4kbWVzc2FnZSh7CiAgICAgICAgICB0eXBlOiAnaW5mbycsCiAgICAgICAgICBtZXNzYWdlOiAn5bey5Y+W5raI5Yig6ZmkJwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBjb21wbGV0ZURhdGU6IGZ1bmN0aW9uIGNvbXBsZXRlRGF0ZSh2YWx1ZSkgewogICAgICByZXR1cm4gdmFsdWUgPCAxMCA/ICIwIiArIHZhbHVlIDogdmFsdWU7CiAgICB9LAogICAgZ2V0Tm93Rm9ybWF0RGF5OiBmdW5jdGlvbiBnZXROb3dGb3JtYXREYXkobm93RGF0ZSkgewogICAgICB2YXIgY2hhciA9ICItIjsKCiAgICAgIGlmIChub3dEYXRlID09IG51bGwpIHsKICAgICAgICBub3dEYXRlID0gbmV3IERhdGUoKTsKICAgICAgfQoKICAgICAgdmFyIGRheSA9IG5vd0RhdGUuZ2V0RGF0ZSgpOwogICAgICB2YXIgbW9udGggPSBub3dEYXRlLmdldE1vbnRoKCkgKyAxOyAvL+azqOaEj+aciOS7vemcgOimgSsxCgogICAgICB2YXIgeWVhciA9IG5vd0RhdGUuZ2V0RnVsbFllYXIoKTsgLy/ooaXlhagw77yM5bm25ou85o6lCgogICAgICByZXR1cm4geWVhciArIGNoYXIgKyB0aGlzLmNvbXBsZXRlRGF0ZShtb250aCkgKyBjaGFyICsgdGhpcy5jb21wbGV0ZURhdGUoZGF5KTsKICAgIH0sCiAgICBnZXROb3dGb3JtYXRUaW1lOiBmdW5jdGlvbiBnZXROb3dGb3JtYXRUaW1lKCkgewogICAgICB2YXIgbm93RGF0ZSA9IG5ldyBEYXRlKCk7CiAgICAgIHZhciBjb2xvbiA9ICI6IjsKICAgICAgdmFyIGggPSBub3dEYXRlLmdldEhvdXJzKCk7CiAgICAgIHZhciBtID0gbm93RGF0ZS5nZXRNaW51dGVzKCk7CiAgICAgIHZhciBzID0gbm93RGF0ZS5nZXRTZWNvbmRzKCk7IC8v6KGl5YWoMO+8jOW5tuaLvOaOpQoKICAgICAgcmV0dXJuIHRoaXMuZ2V0Tm93Rm9ybWF0RGF5KG5vd0RhdGUpICsgIiAiICsgdGhpcy5jb21wbGV0ZURhdGUoaCkgKyBjb2xvbiArIHRoaXMuY29tcGxldGVEYXRlKG0pICsgY29sb24gKyB0aGlzLmNvbXBsZXRlRGF0ZShzKTsKICAgIH0sCiAgICBnZXRMYXN0Rm9ybWF0RGF5OiBmdW5jdGlvbiBnZXRMYXN0Rm9ybWF0RGF5KG5vd0RhdGUpIHsKICAgICAgdmFyIGNoYXIgPSAiLSI7CgogICAgICBpZiAobm93RGF0ZSA9PSBudWxsKSB7CiAgICAgICAgbm93RGF0ZSA9IG5ldyBEYXRlKCk7CiAgICAgIH0KCiAgICAgIHZhciBkYXkgPSBub3dEYXRlLmdldERhdGUoKTsKICAgICAgdmFyIG1vbnRoID0gbm93RGF0ZS5nZXRNb250aCgpICsgMTsgLy/ms6jmhI/mnIjku73pnIDopoErMQoKICAgICAgdmFyIHllYXIgPSBub3dEYXRlLmdldEZ1bGxZZWFyKCk7IC8v6KGl5YWoMO+8jOW5tuaLvOaOpQoKICAgICAgcmV0dXJuIHllYXIgLSAxICsgY2hhciArIHRoaXMuY29tcGxldGVEYXRlKG1vbnRoKSArIGNoYXIgKyB0aGlzLmNvbXBsZXRlRGF0ZShkYXkpOwogICAgfSwKICAgIGdldExhc3RGb3JtYXRUaW1lOiBmdW5jdGlvbiBnZXRMYXN0Rm9ybWF0VGltZSgpIHsKICAgICAgdmFyIG5vd0RhdGUgPSBuZXcgRGF0ZSgpOwogICAgICB2YXIgY29sb24gPSAiOiI7CiAgICAgIHZhciBoID0gbm93RGF0ZS5nZXRIb3VycygpOwogICAgICB2YXIgbSA9IG5vd0RhdGUuZ2V0TWludXRlcygpOwogICAgICB2YXIgcyA9IG5vd0RhdGUuZ2V0U2Vjb25kcygpOyAvL+ihpeWFqDDvvIzlubbmi7zmjqUKCiAgICAgIHJldHVybiB0aGlzLmdldExhc3RGb3JtYXREYXkobm93RGF0ZSkgKyAiICIgKyB0aGlzLmNvbXBsZXRlRGF0ZShoKSArIGNvbG9uICsgdGhpcy5jb21wbGV0ZURhdGUobSkgKyBjb2xvbiArIHRoaXMuY29tcGxldGVEYXRlKHMpOwogICAgfSwKICAgIGNyZWF0ZU5ld1Byb2o6IGZ1bmN0aW9uIGNyZWF0ZU5ld1Byb2ooKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICByZXF1ZXN0KENSRUFURV9QUk9KLCBNRVRIT0QuUE9TVCwgewogICAgICAgIHBhcmFtOiB7CiAgICAgICAgICAiYXV0aG9yIjogdGhhdC5hdXRob3JGb3JQcm9qZWN0LAogICAgICAgICAgImNyZWF0ZV90aW1lIjogdGhhdC5nZXROb3dGb3JtYXRUaW1lKCksCiAgICAgICAgICAibmFtZSI6IHRoYXQubmFtZUZvclByb2plY3QsCiAgICAgICAgICAic3BpZGVyX21hbmFnZXIiOiB7CiAgICAgICAgICAgICJwcm9qZWN0X25hbWUiOiB0aGF0Lm5hbWVGb3JQcm9qZWN0LAogICAgICAgICAgICAic3BpZGVycyI6IHt9CiAgICAgICAgICB9LAogICAgICAgICAgImhvdF9zcGlkZXJfY29uZmlnIjoge30sCiAgICAgICAgICAiZGV2aWNlc19tYW5hZ2VyIjogewogICAgICAgICAgICAiMTI3LjAuMC4xIjogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgICJjcmF3bF90aW1lIjogewogICAgICAgICAgICAic3RhcnQiOiB0aGF0LmdldExhc3RGb3JtYXRUaW1lKCksCiAgICAgICAgICAgICJlbmQiOiB0aGF0LmdldE5vd0Zvcm1hdFRpbWUoKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgX3RoaXM0LiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogJ+WIm+W7uumhueebruaIkOWKnycsCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgICAgfSk7CgogICAgICAgICAgX3RoaXM0LnF1ZXJ5UHJvamVjdHMoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXM0LiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogJ+WIm+W7uumhueebruWksei0pScsCiAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5pc0NyZWF0ZVByb2plY3RCdG5WaXNpYmxlID0gZmFsc2U7CiAgICB9LAogICAgZ2V0Q29udGVudFNwaWRlcjogZnVuY3Rpb24gZ2V0Q29udGVudFNwaWRlcigpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICB0aGlzLnNwaWRlcl9jcmVhdGVEaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB0aGF0LmFkZFNwaWRlciA9IFtdOwogICAgICByZXF1ZXN0KEdFVF9BTExfQ09OVEVOVF9TUElERVIsIE1FVEhPRC5HRVQsIHt9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgbm93U3BpZGVyID0gW107CgogICAgICAgIGZvciAodmFyIGkgaW4gX3RoaXM1LnNwaWRlcl90YWJsZURhdGEpIHsKICAgICAgICAgIG5vd1NwaWRlci5wdXNoKF90aGlzNS5zcGlkZXJfdGFibGVEYXRhW2ldWyduYW1lJ10pOwogICAgICAgIH0KCiAgICAgICAgdmFyIHNwaWRlck9wdGlvbnMgPSByZXMuZGF0YS5jb250ZW50X3NwaWRlcnMuZmlsdGVyKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgICByZXR1cm4gIW5vd1NwaWRlci5pbmNsdWRlcyh2KTsKICAgICAgICB9KTsKICAgICAgICB0aGF0LmFkZFNwaWRlckxpc3QgPSBzcGlkZXJPcHRpb25zOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRIb3RTcGlkZXJzOiBmdW5jdGlvbiBnZXRIb3RTcGlkZXJzKCkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHJlcXVlc3QoR0VUX0hPVF9TUElERVIsIE1FVEhPRC5HRVQpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuZGF0YS5jb2RlID09PSAyMDApIHsKICAgICAgICAgIHRoYXQuYWxsSG90U3BpZGVycyA9IFtdOwogICAgICAgICAgdGhhdC5hbGxIb3RTcGlkZXJzID0gcmVzLmRhdGEuaG90X3NwaWRlcnM7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBnZXRIb3RTcGlkZXJzRm9yUHJvamVjdDogZnVuY3Rpb24gZ2V0SG90U3BpZGVyc0ZvclByb2plY3QocHJvamVjdE5hbWUpIHsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICByZXF1ZXN0KEdFVF9QUk9KRUNUU19JTkZPLCBNRVRIT0QuUE9TVCwgewogICAgICAgIHByb2plY3RfbmFtZTogcHJvamVjdE5hbWUKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgdmFyIGFsbFNwaWRlcnMgPSByZXMuZGF0YS5tZXNzYWdlLmhvdF9zcGlkZXJfY29uZmlnOwogICAgICAgICAgdGhhdC5wcm9qZWN0SG90U3BpZGVycyA9IFtdOwoKICAgICAgICAgIGZvciAodmFyIGtleSBpbiBhbGxTcGlkZXJzKSB7CiAgICAgICAgICAgIHRoYXQucHJvamVjdEhvdFNwaWRlcnMucHVzaCh7CiAgICAgICAgICAgICAgInBsYXRmb3JtIjoga2V5LAogICAgICAgICAgICAgICJzdGF0dXMiOiBhbGxTcGlkZXJzW2tleV0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBnZXRBbGxLZXl3b3Jkc0ZvclByb2plY3Q6IGZ1bmN0aW9uIGdldEFsbEtleXdvcmRzRm9yUHJvamVjdCgpIHsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB2YXIgcHJvamVjdF9uYW1lID0gdGhhdC5jdXJyZW50UHJvamVjdC5uYW1lOwogICAgICByZXF1ZXN0KEdFVF9DVVNUT01fS0VZV09SRFMsIE1FVEhPRC5QT1NULCB7CiAgICAgICAgInByb2plY3RfbmFtZSI6IHByb2plY3RfbmFtZQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmRhdGEuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICB0aGF0LmFsbEtleXdvcmRzRm9yUHJvamVjdCA9IFtdOwogICAgICAgICAgdGhhdC5hbGxLZXl3b3Jkc0ZvclByb2plY3QgPSByZXMuZGF0YS5tZXNzYWdlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgYWRkSG90U3BpZGVyOiBmdW5jdGlvbiBhZGRIb3RTcGlkZXIoKSB7CiAgICAgIHZhciB0aGF0ID0gdGhpczsKICAgICAgdmFyIHByb2plY3ROYW1lID0gdGhhdC5jdXJyZW50UHJvamVjdC5uYW1lOwogICAgICByZXF1ZXN0KEFERF9IT1RfU1BJREVSLCBNRVRIT0QuUE9TVCwgewogICAgICAgICJwcm9qZWN0X25hbWUiOiBwcm9qZWN0TmFtZSwKICAgICAgICAiYWRkX3NwaWRlciI6IFt0aGF0Lm5ld0hvdFNwaWRlckZvclByb2plY3RdCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuZGF0YS5jb2RlID09PSAyMDApIHsKICAgICAgICAgIHRoYXQuZ2V0SG90U3BpZGVyc0ZvclByb2plY3QodGhhdC5jdXJyZW50UHJvamVjdC5uYW1lKTsKICAgICAgICAgIHRoYXQuaXNBZGRIb3RTcGlkZXJCdG5WaXNpYmxlID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICByZW1vdmVIb3RTcGlkZXI6IGZ1bmN0aW9uIHJlbW92ZUhvdFNwaWRlcihob3RTcGlkZXIpIHsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB2YXIgcHJvamVjdE5hbWUgPSB0aGF0LmN1cnJlbnRQcm9qZWN0Lm5hbWU7CiAgICAgIHJlcXVlc3QoUk1fSE9UX1NQSURFUiwgTUVUSE9ELlBPU1QsIHsKICAgICAgICAicHJvamVjdF9uYW1lIjogcHJvamVjdE5hbWUsCiAgICAgICAgInJtX3NwaWRlciI6IFtob3RTcGlkZXJdCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuZGF0YS5jb2RlID09PSAyMDApIHsKICAgICAgICAgIHRoYXQuZ2V0SG90U3BpZGVyc0ZvclByb2plY3QodGhhdC5jdXJyZW50UHJvamVjdC5uYW1lKTsKICAgICAgICAgIHRoYXQuaXNBZGRIb3RTcGlkZXJCdG5WaXNpYmxlID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBhZGRIb3RTcGlkZXJLZXl3b3JkOiBmdW5jdGlvbiBhZGRIb3RTcGlkZXJLZXl3b3JkKCkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHZhciBwcm9qZWN0X25hbWUgPSB0aGF0LmN1cnJlbnRQcm9qZWN0Lm5hbWU7CiAgICAgIHZhciBuZXdUaXRsZSA9IHRoYXQubmV3VGl0bGVGb3JQcm9qZWN0OwogICAgICB2YXIgYWxsS2V5d29yZHMgPSB0aGF0Lm5ld0tleXdvcmRGb3JQcm9qZWN0LnNwbGl0KCJcbiIpOwogICAgICByZXF1ZXN0KEFERF9LRVlXT1JELCBNRVRIT0QuUE9TVCwgewogICAgICAgICJwcm9qZWN0X25hbWUiOiBwcm9qZWN0X25hbWUsCiAgICAgICAgImFkZF9rZXl3b3JkcyI6IHsKICAgICAgICAgICJ0aXRsZSI6IG5ld1RpdGxlLAogICAgICAgICAgImtleXdvcmRzIjogYWxsS2V5d29yZHMKICAgICAgICB9LAogICAgICAgICJybV9rZXl3b3JkcyI6IHt9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHRoYXQuZ2V0QWxsS2V5d29yZHNGb3JQcm9qZWN0KCk7CiAgICAgICAgdGhhdC5pc0FkZEtleXdvcmRCdG5WaXNpYmxlID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGRlbGV0ZUtleXdvcmRGb3JQcm9qZWN0OiBmdW5jdGlvbiBkZWxldGVLZXl3b3JkRm9yUHJvamVjdChpbmRleCwgcm93KSB7CiAgICAgIHZhciB0aGF0ID0gdGhpczsKICAgICAgdmFyIHByb2plY3RfbmFtZSA9IHRoYXQuY3VycmVudFByb2plY3QubmFtZTsKICAgICAgdmFyIGtleXdvcmQgPSB7fTsKICAgICAga2V5d29yZFsidGl0bGUiXSA9IHJvdy50aXRsZTsKICAgICAga2V5d29yZFsia2V5d29yZHMiXSA9IFtyb3cua2V5d29yZF07CiAgICAgIHJlcXVlc3QoQUREX0tFWVdPUkQsIE1FVEhPRC5QT1NULCB7CiAgICAgICAgInByb2plY3RfbmFtZSI6IHByb2plY3RfbmFtZSwKICAgICAgICAiYWRkX2tleXdvcmRzIjoge30sCiAgICAgICAgInJtX2tleXdvcmRzIjoga2V5d29yZAogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICB0aGF0LmdldEFsbEtleXdvcmRzRm9yUHJvamVjdCgpOwogICAgICAgIHRoYXQuaXNBZGRLZXl3b3JkQnRuVmlzaWJsZSA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICBxdWVyeVByb2plY3RzOiBmdW5jdGlvbiBxdWVyeVByb2plY3RzKCkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHJlcXVlc3QoR0VUX1BST0pFQ1RTX0lORk8sIE1FVEhPRC5QT1NULCB7CiAgICAgICAgcHJvamVjdF9uYW1lOiAiIgogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmRhdGEuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICB0aGF0LmFsbFByb2plY3QgPSByZXMuZGF0YS5tZXNzYWdlLnByb2plY3RzOwogICAgICAgICAgY29uc29sZS5sb2codGhhdC5hbGxQcm9qZWN0KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIG1hbmFnZUNvbnRlbnRTcGlkZXI6IGZ1bmN0aW9uIG1hbmFnZUNvbnRlbnRTcGlkZXIoaW5kZXgsIHJvdykgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHRoYXQuYWN0aXZlTmFtZSA9ICJzZWNvbmQiOwogICAgICB0aGlzLmdldEFsbENvbnRlbnRTcGlkZXIocm93Lm5hbWUpOwogICAgICB0aGlzLm5vd1Byb2plY3QgPSByb3cubmFtZTsKICAgIH0sCiAgICBnZXRBbGxDb250ZW50U3BpZGVyOiBmdW5jdGlvbiBnZXRBbGxDb250ZW50U3BpZGVyKHByb2plY3ROYW1lKSB7CiAgICAgIHZhciBfdGhpczYgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiByZXF1ZXN0KENPTlRFTlRfU1BJREVSLCBNRVRIT0QuUE9TVCwgewogICAgICAgICAgICAgICAgICBwcm9qZWN0X25hbWU6IHByb2plY3ROYW1lCiAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgICAgdmFyIG5ld0RhdGEgPSBbXTsKCiAgICAgICAgICAgICAgICAgIGZvciAodmFyIGRldmljZSBpbiByZXMuZGF0YS5jb250ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgc3BpZGVyIGluIHJlcy5kYXRhLmNvbnRlbnRbZGV2aWNlXSkgewogICAgICAgICAgICAgICAgICAgICAgbmV3RGF0YS5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZTogcmVzLmRhdGEuY29udGVudFtkZXZpY2VdW3NwaWRlcl1bJ3N0YXJ0X3RpbWUnXSwKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogc3BpZGVyLAogICAgICAgICAgICAgICAgICAgICAgICBuX25hbWU6IHNwaWRlciwKICAgICAgICAgICAgICAgICAgICAgICAgdGFnOiByZXMuZGF0YS5jb250ZW50W2RldmljZV1bc3BpZGVyXVsnbGFiZWwnXSA9PT0gdHJ1ZSA/ICflt7LlkK/nlKgnIDogJ+W3suemgeeUqCcsCiAgICAgICAgICAgICAgICAgICAgICAgIGRldmljZTogZGV2aWNlLAogICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHJlcy5kYXRhLmNvbnRlbnRbZGV2aWNlXVtzcGlkZXJdWydzdGF0dXMnXQogICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICBfdGhpczYuc3BpZGVyX3RhYmxlRGF0YSA9IG5ld0RhdGE7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG1hbmFnZUhvdFNwaWRlcjogZnVuY3Rpb24gbWFuYWdlSG90U3BpZGVyKGluZGV4KSB7CiAgICAgIHZhciB0aGF0ID0gdGhpczsKICAgICAgdGhhdC5hY3RpdmVOYW1lID0gInRoaXJkIjsKICAgICAgdGhhdC5jdXJyZW50UHJvamVjdCA9IHRoYXQuYWxsUHJvamVjdFtpbmRleF07CiAgICAgIHZhciBhbGxTcGlkZXJzID0gdGhhdC5jdXJyZW50UHJvamVjdC5ob3Rfc3BpZGVyX2NvbmZpZzsKICAgICAgdGhhdC5wcm9qZWN0SG90U3BpZGVycyA9IFtdOwoKICAgICAgZm9yICh2YXIga2V5IGluIGFsbFNwaWRlcnMpIHsKICAgICAgICB0aGF0LnByb2plY3RIb3RTcGlkZXJzLnB1c2goewogICAgICAgICAgInBsYXRmb3JtIjoga2V5LAogICAgICAgICAgInN0YXR1cyI6IGFsbFNwaWRlcnNba2V5XQogICAgICAgIH0pOwogICAgICB9CgogICAgICB0aGF0LmdldEhvdFNwaWRlcnMoKTsKICAgICAgdGhhdC5nZXRBbGxLZXl3b3Jkc0ZvclByb2plY3QoKTsKICAgIH0sCiAgICBtYW5hZ2VEaXN0RXF1aXA6IGZ1bmN0aW9uIG1hbmFnZURpc3RFcXVpcChpbmRleCkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHRoYXQuYWN0aXZlTmFtZSA9ICJmaWZ0aCI7CiAgICAgIHRoYXQuY3VycmVudFByb2plY3QgPSB0aGF0LmFsbFByb2plY3RbaW5kZXhdOwogICAgICByZXF1ZXN0KEdFVF9ERVZJQ0VfSU5GTywgTUVUSE9ELlBPU1QsIHsKICAgICAgICBwcm9qZWN0X25hbWU6IHRoYXQuY3VycmVudFByb2plY3QubmFtZQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmRhdGEuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICB0aGF0LmRpc3RFcXVpcHNGcm9Qb2ouZGlzdEVxdWlwcyA9IFtdOwoKICAgICAgICAgIGZvciAodmFyIGtleSBpbiByZXMuZGF0YS5tZXNzYWdlKSB7CiAgICAgICAgICAgIHRoYXQuZGlzdEVxdWlwc0Zyb1Bvai5kaXN0RXF1aXBzLnB1c2gocmVzLmRhdGEubWVzc2FnZVtrZXldKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXF1ZXN0KEdFVF9ERVZJQ0VfSU5GTywgTUVUSE9ELlBPU1QsIHsKICAgICAgICBwcm9qZWN0X25hbWU6ICIiCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuZGF0YS5jb2RlID09PSAyMDApIHsKICAgICAgICAgIHZhciBkaXN0RXF1aXBzID0gcmVzLmRhdGEubWVzc2FnZTsKICAgICAgICAgIHRoYXQuYWxsRGlzdEVxdWlwID0gW107CgogICAgICAgICAgZm9yICh2YXIga2V5IGluIGRpc3RFcXVpcHMpIHsKICAgICAgICAgICAgdGhhdC5hbGxEaXN0RXF1aXAucHVzaChkaXN0RXF1aXBzW2tleV0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgbWFuYWdlUGxhdEFjY291bnQ6IGZ1bmN0aW9uIG1hbmFnZVBsYXRBY2NvdW50KGluZGV4KSB7CiAgICAgIHZhciB0aGF0ID0gdGhpczsKICAgICAgdGhhdC5hY3RpdmVOYW1lID0gInNpeHRoIjsKICAgICAgdGhhdC5jdXJyZW50UHJvamVjdCA9IHRoYXQuYWxsUHJvamVjdFtpbmRleF07CiAgICAgIHRoYXQucXVlcnlQcm9qZWN0QWNjb3VudCgpOwogICAgfSwKICAgIHJlbG9hZFByb2plY3REZXZpY2U6IGZ1bmN0aW9uIHJlbG9hZFByb2plY3REZXZpY2UoKSB7CiAgICAgIHZhciB0aGF0ID0gdGhpczsKICAgICAgcmVxdWVzdChHRVRfREVWSUNFX0lORk8sIE1FVEhPRC5QT1NULCB7CiAgICAgICAgcHJvamVjdF9uYW1lOiB0aGF0LmN1cnJlbnRQcm9qZWN0Lm5hbWUKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgdGhhdC5kaXN0RXF1aXBzRnJvUG9qLmRpc3RFcXVpcHMgPSBbXTsKCiAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gcmVzLmRhdGEubWVzc2FnZSkgewogICAgICAgICAgICB0aGF0LmRpc3RFcXVpcHNGcm9Qb2ouZGlzdEVxdWlwcy5wdXNoKHJlcy5kYXRhLm1lc3NhZ2Vba2V5XSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBhZGRQcm9qZWN0RGV2aWNlOiBmdW5jdGlvbiBhZGRQcm9qZWN0RGV2aWNlKCkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHJlcXVlc3QoVVBEQVRFX1BST0pFQ1RfREVWSUNFLCBNRVRIT0QuUE9TVCwgewogICAgICAgICJwcm9qZWN0X25hbWUiOiB0aGF0LmN1cnJlbnRQcm9qZWN0Lm5hbWUsCiAgICAgICAgImFkZF9pcCI6IFt0aGF0Lm5ld0Rpc3RFcXVpcElwXSwKICAgICAgICAicm1faXAiOiBbXQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmRhdGEuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICB0aGF0LnJlbG9hZFByb2plY3REZXZpY2UoKTsKICAgICAgICAgIHRoYXQuaXNBZGREaXN0RXF1aXBCdG5WaXNpYmxlID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICByZW1vdmVQcm9qZWN0RGV2aWNlOiBmdW5jdGlvbiByZW1vdmVQcm9qZWN0RGV2aWNlKGRpc3RFcXVpcElwVG9SZW1vdmUsIGRpc3RFcXVpcFBvcnRUb1JlbW92ZSkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHZhciBpcDJwb3J0ID0gZGlzdEVxdWlwSXBUb1JlbW92ZSArICI6IiArIGRpc3RFcXVpcFBvcnRUb1JlbW92ZTsKICAgICAgcmVxdWVzdChVUERBVEVfUFJPSkVDVF9ERVZJQ0UsIE1FVEhPRC5QT1NULCB7CiAgICAgICAgInByb2plY3RfbmFtZSI6IHRoYXQuY3VycmVudFByb2plY3QubmFtZSwKICAgICAgICAiYWRkX2lwIjogW10sCiAgICAgICAgInJtX2lwIjogW2lwMnBvcnRdCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuZGF0YS5jb2RlID09PSAyMDApIHsKICAgICAgICAgIHRoYXQucmVsb2FkUHJvamVjdERldmljZSgpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgdXBkYXRlVGltaW5nVGFzazogZnVuY3Rpb24gdXBkYXRlVGltaW5nVGFzaygpIHsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB2YXIgYV9uYW1lID0gdGhhdC50aW1pbmdUYXNrLm5hbWU7CiAgICAgIHZhciBhX29iaiA9IHt9OwogICAgICBhX29ialsidGltaW5nX2pvYiJdID0ge307CgogICAgICBpZiAodGhhdC50aW1pbmdUYXNrLnRyaWdnZXIgPT09ICJpbnRlcnZhbCIpIHsKICAgICAgICB0aGF0LnRpbWluZ1Rhc2sua3dhcmdzLmRheSA9IE51bWJlcih0aGF0LnRpbWluZ1Rhc2sua3dhcmdzLmRheSk7CiAgICAgICAgdGhhdC50aW1pbmdUYXNrLmt3YXJncy5ob3VyID0gTnVtYmVyKHRoYXQudGltaW5nVGFzay5rd2FyZ3MuaG91cik7CiAgICAgICAgdGhhdC50aW1pbmdUYXNrLmt3YXJncy5taW51dGUgPSBOdW1iZXIodGhhdC50aW1pbmdUYXNrLmt3YXJncy5taW51dGUpOwogICAgICAgIHRoYXQudGltaW5nVGFzay5rd2FyZ3Muc2Vjb25kID0gTnVtYmVyKHRoYXQudGltaW5nVGFzay5rd2FyZ3Muc2Vjb25kKTsKICAgICAgfQoKICAgICAgYV9vYmpbInRpbWluZ19qb2IiXVthX25hbWVdID0gdGhhdC50aW1pbmdUYXNrOwogICAgICByZXF1ZXN0KFVQREFURV9USU1JTkdfSk9CLCBNRVRIT0QuUE9TVCwgYV9vYmopLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHRoYXQucXVlcnlBbGxTY2hlZHVsZVRhc2soKTsKICAgICAgICB0aGF0LmlzQWRkVGltZWRUYXNrQnRuVmlzaWJsZSA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICBzcGlkZXJfZmlsdGVyVGFnOiBmdW5jdGlvbiBzcGlkZXJfZmlsdGVyVGFnKHZhbHVlLCByb3cpIHsKICAgICAgcmV0dXJuIHJvdy50YWcgPT09IHZhbHVlOwogICAgfSwKICAgIHNwaWRlcl9oYW5kbGVDbGljazogZnVuY3Rpb24gc3BpZGVyX2hhbmRsZUNsaWNrKHRhYikgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CgogICAgICBpZiAodGFiLmluZGV4ID09PSAiMyIpIHsKICAgICAgICB0aGF0LnF1ZXJ5QWxsU2NoZWR1bGVUYXNrKCk7CiAgICAgIH0gZWxzZSBpZiAodGFiLmluZGV4ID09PSAiNSIpIHsKICAgICAgICB0aGF0LnF1ZXJ5UHJvamVjdEFjY291bnQoKTsKICAgICAgfSBlbHNlIGlmICh0YWIuaW5kZXggPT09ICIyIikgewogICAgICAgIHRoYXQuZ2V0SG90U3BpZGVycygpOwogICAgICAgIHRoYXQuYWN0aXZlTmFtZSA9ICJ0aGlyZCI7CiAgICAgIH0KICAgIH0sCiAgICBxdWVyeUFsbFNjaGVkdWxlVGFzazogZnVuY3Rpb24gcXVlcnlBbGxTY2hlZHVsZVRhc2soKSB7CiAgICAgIHZhciB0aGF0ID0gdGhpczsKICAgICAgcmVxdWVzdChHRVRfUFJPSkVDVFNfSU5GTywgTUVUSE9ELlBPU1QsIHsKICAgICAgICBwcm9qZWN0X25hbWU6ICIiCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuZGF0YS5jb2RlID09PSAyMDApIHsKICAgICAgICAgIHZhciBqb2JNYW5hZ2VyID0gcmVzLmRhdGEubWVzc2FnZS5qb2JfbWFuYWdlcjsKICAgICAgICAgIHRoYXQuYWxsU2NoZWR1bGVUYXNrID0gW107CgogICAgICAgICAgZm9yICh2YXIga2V5IGluIGpvYk1hbmFnZXIpIHsKICAgICAgICAgICAgdGhhdC5hbGxTY2hlZHVsZVRhc2sucHVzaChqb2JNYW5hZ2VyW2tleV0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgc3BpZGVyX2hhbmRsZURlbGV0ZTogZnVuY3Rpb24gc3BpZGVyX2hhbmRsZURlbGV0ZShpbmRleCwgcm93KSB7CiAgICAgIHZhciBfdGhpczcgPSB0aGlzOwoKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB0aGlzLiRjb25maXJtKCfmraTmk43kvZzlsIbliKDpmaTor6XniKzomassIOaYr+WQpue7p+e7rT8nLCAn5o+Q56S6JywgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICB0eXBlOiAnd2FybmluZycsCiAgICAgICAgY2VudGVyOiB0cnVlCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHJlcXVlc3QoU1BJREVSX0RFTF9BREQsIE1FVEhPRC5QT1NULCB7CiAgICAgICAgICAicHJvamVjdF9uYW1lIjogdGhhdC5ub3dQcm9qZWN0LAogICAgICAgICAgImFkZF9zcGlkZXJzIjogW10sCiAgICAgICAgICAicm1fc3BpZGVycyI6IHJvdy5uX25hbWUKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIGlmIChyZXMuZGF0YS5jb2RlID09IDMwMCkgewogICAgICAgICAgICBfdGhpczcuJG1lc3NhZ2UoewogICAgICAgICAgICAgIG1lc3NhZ2U6ICfkuI3lrZjlnKjor6XniKzomavpobnnm64nLAogICAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzNy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgbWVzc2FnZTogJ+WIoOmZpOeIrOiZq+aIkOWKnycsCiAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgX3RoaXM3LnNwaWRlcl90YWJsZURhdGEuc3BsaWNlKGluZGV4LCAxKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzNy4kbWVzc2FnZSh7CiAgICAgICAgICB0eXBlOiAnaW5mbycsCiAgICAgICAgICBtZXNzYWdlOiAn5bey5Y+W5raI5Yig6ZmkJwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBzcGlkZXJfaGFuZGxlX3VzZXJfQ3VycmVudENoYW5nZTogZnVuY3Rpb24gc3BpZGVyX2hhbmRsZV91c2VyX0N1cnJlbnRDaGFuZ2UodmFsKSB7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSB2YWw7CiAgICB9LAogICAgY3JlYXRlU3BpZGVyOiBmdW5jdGlvbiBjcmVhdGVTcGlkZXIoKSB7CiAgICAgIHZhciBfdGhpczggPSB0aGlzOwoKICAgICAgLy/lnKjov5nph4zor7fmsYLmnI3liqHlmajojrflj5bliLDlj6/ku6Xmt7vliqDnmoTniKzomavvvIzlubbkuJTlr7nmr5TmraTpobnnm67lt7LmnInnmoTniKzomavmm7TmlrBvcHRpb25zCiAgICAgIC8v6K+35rGC5pyN5Yqh5Zmo5paw5bu654is6JmrCiAgICAgIGlmICh0aGlzLmFkZFNwaWRlci5sZW5ndGggPT0gMCkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgbWVzc2FnZTogJ+acqumAieaLqeeIrOiZqycsCiAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXF1ZXN0KFNQSURFUl9ERUxfQURELCBNRVRIT0QuUE9TVCwgewogICAgICAgICAgInByb2plY3RfbmFtZSI6IHRoaXMubm93UHJvamVjdCwKICAgICAgICAgICJhZGRfc3BpZGVycyI6IHRoaXMuYWRkU3BpZGVyLAogICAgICAgICAgInJtX3NwaWRlcnMiOiAiIgogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT0gMzAwKSB7CiAgICAgICAgICAgIF90aGlzOC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgbWVzc2FnZTogJ+S4jeWtmOWcqOivpeeIrOiZq+mhueebricsCiAgICAgICAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX3RoaXM4LiRtZXNzYWdlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiAn5re75Yqg5oiQ5YqfJywKICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBfdGhpczguZ2V0QWxsQ29udGVudFNwaWRlcihfdGhpczgubm93UHJvamVjdCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHRoaXMuc3BpZGVyX2NyZWF0ZURpYWxvZ1Zpc2libGUgPSBmYWxzZTsKICAgIH0sCiAgICBzcGlkZXJfZWRpdDogZnVuY3Rpb24gc3BpZGVyX2VkaXQoaW5kZXgsIHJvdykgewogICAgICB0aGlzLnNwaWRlcl9lZGl0RGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICAgIHRoaXMuc3BpZGVyX2lzX3N0YXJ0ID0gcm93LnRhZyA9PSAn5bey5ZCv55SoJyA/IHRydWUgOiBmYWxzZTsKICAgICAgdGhpcy5lZGl0X3NwaWRlcl9pbmRleCA9IGluZGV4OwogICAgICB0aGlzLmVkaXRfc3BpZGVyX3JvdyA9IHJvdzsgLy8g5qC55o2u5Y6f5aeL5pWw5o2u5pu05paw5oyJ6ZKuCiAgICB9LAogICAgZWRpdFNwaWRlcjogZnVuY3Rpb24gZWRpdFNwaWRlcigpIHsKICAgICAgdmFyIF90aGlzOSA9IHRoaXM7CgogICAgICB2YXIgc3RhdHVzID0gdGhpcy5lZGl0X3NwaWRlcl9yb3cudGFnID09ICflt7LlkK/nlKgnID8gZmFsc2UgOiB0cnVlOwogICAgICB2YXIgbmFtZSA9IHRoaXMuZWRpdF9zcGlkZXJfcm93Lm5fbmFtZTsKICAgICAgdmFyIHNwaWRlcl9zdGF0dXMgPSB7fTsKICAgICAgc3BpZGVyX3N0YXR1c1tuYW1lXSA9IHN0YXR1czsKICAgICAgcmVxdWVzdChTUElERVJfU1RBVFVTLCBNRVRIT0QuUE9TVCwgewogICAgICAgIHByb2plY3RfbmFtZTogdGhpcy5ub3dQcm9qZWN0LAogICAgICAgIHNwaWRlcl9zdGF0dXM6IHNwaWRlcl9zdGF0dXMKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT0gMzAwKSB7CiAgICAgICAgICBfdGhpczkuJG1lc3NhZ2UoewogICAgICAgICAgICBtZXNzYWdlOiAn5LiN5a2Y5Zyo6K+l54is6Jmr6aG555uuJywKICAgICAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXM5LiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogJ+e8lui+keeIrOiZq+aIkOWKnycsCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgICAgfSk7CgogICAgICAgICAgX3RoaXM5LnNwaWRlcl90YWJsZURhdGFbX3RoaXM5LmVkaXRfc3BpZGVyX2luZGV4XS50YWcgPSBfdGhpczkuc3BpZGVyX2lzX3N0YXJ0ID8gIuW3suWQr+eUqCIgOiAi5bey5YGc55SoIjsKICAgICAgICB9CiAgICAgIH0pOwogICAgICB0aGlzLnNwaWRlcl9lZGl0RGlhbG9nVmlzaWJsZSA9IGZhbHNlOwogICAgfSwKICAgIG1vbml0b3JTcGlkZXI6IGZ1bmN0aW9uIG1vbml0b3JTcGlkZXIoaW5kZXgsIHJvdykgewogICAgICBjb25zb2xlLmxvZyhpbmRleCwgcm93KTsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB0aGF0LmFjdGl2ZU5hbWUgPSAic2V2ZW50aCI7CiAgICAgIHJlcXVlc3QoU1BJREVSX01PTklUT1IsIE1FVEhPRC5QT1NULCB7CiAgICAgICAgInByb2plY3RfbmFtZSI6IHRoYXQubm93UHJvamVjdCwKICAgICAgICAicGxhdGZvcm0iOiByb3cubl9uYW1lCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGUpIHsKICAgICAgICBpZiAoZS5kYXRhLmNvZGUgPT09IDIwMCkgdGhhdC5wYXJzZVNwaWRlclN0YXR1cyhlLmRhdGEuZGF0YSk7CiAgICAgIH0pOwogICAgfSwKICAgIHBhcnNlU3BpZGVyU3RhdHVzOiBmdW5jdGlvbiBwYXJzZVNwaWRlclN0YXR1cyhvcmlnaW5EYXRhKSB7CiAgICAgIHRoaXMuc3BpZGVyU3RhdHVzLnN0YXJ0VGltZSA9IG9yaWdpbkRhdGEuc3RhcnRfdGltZTsKICAgICAgdGhpcy5zcGlkZXJTdGF0dXMuZW5kVGltZSA9IG9yaWdpbkRhdGEuZW5kX3RpbWU7CiAgICAgIHRoaXMuc3BpZGVyU3RhdHVzLmNsb3NlZFJlYXNvbiA9IG9yaWdpbkRhdGEuY2xvc2VkX3JlYXNvbjsKICAgICAgdmFyIGRhdGFWb2x1bWVDaGFydERvbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkYXRhVm9sdW1lJyk7CiAgICAgIHZhciBkYXRhVm9sdW1lQ2hhcnQgPSBlY2hhcnRzLmluaXQoZGF0YVZvbHVtZUNoYXJ0RG9tKTsKICAgICAgdmFyIGRhdGFWb2x1bWVDaGFydE9wdGlvbiA9IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogIuaVsOaNrumHjyIKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJwogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBkYXRhOiBbJ+aVsOaNrumHjyddCiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICBsZWZ0OiAnMyUnLAogICAgICAgICAgcmlnaHQ6ICc0JScsCiAgICAgICAgICBib3R0b206ICczJScsCiAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUKICAgICAgICB9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgYm91bmRhcnlHYXA6IGZhbHNlLAogICAgICAgICAgZGF0YTogb3JpZ2luRGF0YS54CiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogJ3ZhbHVlJwogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+aVsOaNrumHjycsCiAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICBzdGFjazogJ1RvdGFsJywKICAgICAgICAgIGRhdGE6IG9yaWdpbkRhdGFbIuaVsOaNrumHjyJdLAogICAgICAgICAgc21vb3RoOiB0cnVlCiAgICAgICAgfV0KICAgICAgfTsKICAgICAgZGF0YVZvbHVtZUNoYXJ0T3B0aW9uICYmIGRhdGFWb2x1bWVDaGFydC5zZXRPcHRpb24oZGF0YVZvbHVtZUNoYXJ0T3B0aW9uKTsKICAgICAgdmFyIHJlcVJlc3BWb2x1bWVDaGFydERvbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXFSZXNwVm9sdW1lJyk7CiAgICAgIHZhciByZXFSZXNwVm9sdW1lQ2hhcnQgPSBlY2hhcnRzLmluaXQocmVxUmVzcFZvbHVtZUNoYXJ0RG9tKTsKICAgICAgdmFyIHJlcVJlc3BWb2x1bWVDaGFydE9wdGlvbiA9IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogIuivt+axguWSjOWTjeW6lOmHjyIKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJwogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBkYXRhOiBbJ+ivt+axgumHjycsICflk43lupTph48nXQogICAgICAgIH0sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGVmdDogJzMlJywKICAgICAgICAgIHJpZ2h0OiAnNCUnLAogICAgICAgICAgYm90dG9tOiAnMyUnLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB4QXhpczogewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIGJvdW5kYXJ5R2FwOiBmYWxzZSwKICAgICAgICAgIGRhdGE6IG9yaWdpbkRhdGEueAogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHR5cGU6ICd2YWx1ZScKICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICfor7fmsYLph48nLAogICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgc3RhY2s6ICdUb3RhbCcsCiAgICAgICAgICBkYXRhOiBvcmlnaW5EYXRhWyLor7fmsYLph48iXSwKICAgICAgICAgIHNtb290aDogdHJ1ZQogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICflk43lupTph48nLAogICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgc3RhY2s6ICdUb3RhbCcsCiAgICAgICAgICBkYXRhOiBvcmlnaW5EYXRhWyLlk43lupTph48iXSwKICAgICAgICAgIHNtb290aDogdHJ1ZQogICAgICAgIH1dCiAgICAgIH07CiAgICAgIHJlcVJlc3BWb2x1bWVDaGFydE9wdGlvbiAmJiByZXFSZXNwVm9sdW1lQ2hhcnQuc2V0T3B0aW9uKHJlcVJlc3BWb2x1bWVDaGFydE9wdGlvbik7CiAgICAgIHZhciBxdWV1ZVZvbHVtZUNoYXJ0RG9tID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3F1ZXVlVm9sdW1lJyk7CiAgICAgIHZhciBxdWV1ZVZvbHVtZUNoYXJ0ID0gZWNoYXJ0cy5pbml0KHF1ZXVlVm9sdW1lQ2hhcnREb20pOwogICAgICB2YXIgcXVldWVWb2x1bWVDaGFydE9wdGlvbiA9IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogIumYn+WIl+mHjyIKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJwogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBkYXRhOiBbJ+W+heivt+axguaVsOmHjycsICflt7LmipPlj5bmlbDph48nXQogICAgICAgIH0sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGVmdDogJzMlJywKICAgICAgICAgIHJpZ2h0OiAnNCUnLAogICAgICAgICAgYm90dG9tOiAnMyUnLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB4QXhpczogewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIGJvdW5kYXJ5R2FwOiBmYWxzZSwKICAgICAgICAgIGRhdGE6IG9yaWdpbkRhdGEueAogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHR5cGU6ICd2YWx1ZScKICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICflvoXor7fmsYLmlbDph48nLAogICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgc3RhY2s6ICdUb3RhbCcsCiAgICAgICAgICBkYXRhOiBvcmlnaW5EYXRhWyLlvoXor7fmsYLmlbDph48iXSwKICAgICAgICAgIHNtb290aDogdHJ1ZQogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICflt7LmipPlj5bmlbDph48nLAogICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgc3RhY2s6ICdUb3RhbCcsCiAgICAgICAgICBkYXRhOiBvcmlnaW5EYXRhWyLlt7LmipPlj5bmlbDph48iXSwKICAgICAgICAgIHNtb290aDogdHJ1ZQogICAgICAgIH1dCiAgICAgIH07CiAgICAgIHF1ZXVlVm9sdW1lQ2hhcnRPcHRpb24gJiYgcXVldWVWb2x1bWVDaGFydC5zZXRPcHRpb24ocXVldWVWb2x1bWVDaGFydE9wdGlvbik7CiAgICAgIHZhciBzdGF0dXNSZXNwVm9sdW1lQ2hhcnREb20gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3RhdHVzUmVzcFZvbHVtZScpOwogICAgICB2YXIgc3RhdHVzUmVzcFZvbHVtZUNoYXJ0ID0gZWNoYXJ0cy5pbml0KHN0YXR1c1Jlc3BWb2x1bWVDaGFydERvbSk7CiAgICAgIHZhciBzdGF0dXNSZXNwVm9sdW1lQ2hhcnRPcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICLnirbmgIHnoIHlk43lupTmlbAiCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgZGF0YTogWycyMDAnLCAnMzAxJywgJzQwNCddCiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICBsZWZ0OiAnMyUnLAogICAgICAgICAgcmlnaHQ6ICc0JScsCiAgICAgICAgICBib3R0b206ICczJScsCiAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUKICAgICAgICB9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgYm91bmRhcnlHYXA6IGZhbHNlLAogICAgICAgICAgZGF0YTogb3JpZ2luRGF0YS54CiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogJ3ZhbHVlJwogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJzIwMCcsCiAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICBzdGFjazogJ1RvdGFsJywKICAgICAgICAgIGRhdGE6IG9yaWdpbkRhdGFbIjIwMCJdLAogICAgICAgICAgc21vb3RoOiB0cnVlCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJzMwMScsCiAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICBzdGFjazogJ1RvdGFsJywKICAgICAgICAgIGRhdGE6IG9yaWdpbkRhdGFbIjMwMSJdLAogICAgICAgICAgc21vb3RoOiB0cnVlCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJzQwNCcsCiAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICBzdGFjazogJ1RvdGFsJywKICAgICAgICAgIGRhdGE6IG9yaWdpbkRhdGFbIjQwNCJdLAogICAgICAgICAgc21vb3RoOiB0cnVlCiAgICAgICAgfV0KICAgICAgfTsKICAgICAgc3RhdHVzUmVzcFZvbHVtZUNoYXJ0T3B0aW9uICYmIHN0YXR1c1Jlc3BWb2x1bWVDaGFydC5zZXRPcHRpb24oc3RhdHVzUmVzcFZvbHVtZUNoYXJ0T3B0aW9uKTsKICAgIH0sCiAgICBzaG93VXBkYXRlVGltaW5nVGFza0RpYWxvZzogZnVuY3Rpb24gc2hvd1VwZGF0ZVRpbWluZ1Rhc2tEaWFsb2coam9iKSB7CiAgICAgIHRoaXMudGltaW5nVGFzayA9IGpvYjsKICAgICAgdGhpcy5pc0FkZFRpbWVkVGFza0J0blZpc2libGUgPSB0cnVlOwogICAgfSwKICAgIHJlc3VtZVRpbWVkVGFzazogZnVuY3Rpb24gcmVzdW1lVGltZWRUYXNrKGpvYl9uYW1lKSB7CiAgICAgIHZhciB0aGF0ID0gdGhpczsKICAgICAgcmVxdWVzdChTVEFSVF9USU1JTkcsIE1FVEhPRC5QT1NULCB7CiAgICAgICAgInRpbWluZ19qb2JfbmFtZSI6IGpvYl9uYW1lCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHRoYXQucXVlcnlBbGxTY2hlZHVsZVRhc2soKTsKICAgICAgICB0aGF0LmlzQWRkVGltZWRUYXNrQnRuVmlzaWJsZSA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICBwYXVzZVRpbWVkVGFzazogZnVuY3Rpb24gcGF1c2VUaW1lZFRhc2soam9iX25hbWUpIHsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICByZXF1ZXN0KFBBVVNFX1RJTUlORywgTUVUSE9ELlBPU1QsIHsKICAgICAgICAidGltaW5nX2pvYl9uYW1lIjogam9iX25hbWUKICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgdGhhdC5xdWVyeUFsbFNjaGVkdWxlVGFzaygpOwogICAgICAgIHRoYXQuaXNBZGRUaW1lZFRhc2tCdG5WaXNpYmxlID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGFkZFByb2plY3RBY2NvdW50OiBmdW5jdGlvbiBhZGRQcm9qZWN0QWNjb3VudCgpIHsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB2YXIgcHJvX25hbWUgPSB0aGF0LmN1cnJlbnRQcm9qZWN0Lm5hbWU7CiAgICAgIHZhciBhY2NvdW50X25hbWUgPSB0aGF0Lm5ld1Byb2plY3RBY2NvdW50OwogICAgICByZXF1ZXN0KFVQREFURV9QUk9fQUNDT1VOVCwgTUVUSE9ELlBPU1QsIHsKICAgICAgICAicHJvamVjdF9uYW1lIjogcHJvX25hbWUsCiAgICAgICAgInVwZGF0ZV9hY2MiOiB7CiAgICAgICAgICAi5b6u5Y2aIjogewogICAgICAgICAgICAiYWRkIjogW2FjY291bnRfbmFtZV0sCiAgICAgICAgICAgICJybSI6IFtdCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICB0aGF0LnF1ZXJ5UHJvamVjdEFjY291bnQoKTsKICAgICAgICB0aGF0LmlzQWRkUGxhdGZvcm1BY2NvdW50c0J0blZpc2libGUgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgZGVsZXRlUHJvamVjdEFjY291bnQ6IGZ1bmN0aW9uIGRlbGV0ZVByb2plY3RBY2NvdW50KHJvdykgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHZhciBwcm9fbmFtZSA9IHRoYXQuY3VycmVudFByb2plY3QubmFtZTsKICAgICAgdmFyIGFjY291bnRfbmFtZSA9IHJvdy51c2VyOwogICAgICByZXF1ZXN0KFVQREFURV9QUk9fQUNDT1VOVCwgTUVUSE9ELlBPU1QsIHsKICAgICAgICAicHJvamVjdF9uYW1lIjogcHJvX25hbWUsCiAgICAgICAgInVwZGF0ZV9hY2MiOiB7CiAgICAgICAgICAi5b6u5Y2aIjogewogICAgICAgICAgICAiYWRkIjogW10sCiAgICAgICAgICAgICJybSI6IFthY2NvdW50X25hbWVdCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICB0aGF0LnF1ZXJ5UHJvamVjdEFjY291bnQoKTsKICAgICAgICB0aGF0LmlzQWRkUGxhdGZvcm1BY2NvdW50c0J0blZpc2libGUgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlQ2xvc2U6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKCkgewogICAgICB0aGlzLmlzQWRkRGlzdEVxdWlwQnRuVmlzaWJsZSA9IGZhbHNlOwogICAgfSwKICAgIHF1ZXJ5UHJvamVjdEFjY291bnQ6IGZ1bmN0aW9uIHF1ZXJ5UHJvamVjdEFjY291bnQoKSB7CiAgICAgIHZhciB0aGF0ID0gdGhpczsKICAgICAgdmFyIHByb19uYW1lID0gdGhhdC5jdXJyZW50UHJvamVjdC5uYW1lOwogICAgICByZXF1ZXN0KEdFVF9BQ0NPVU5UX0lORk8sIE1FVEhPRC5QT1NULCB7CiAgICAgICAgcHJvamVjdF9uYW1lOiBwcm9fbmFtZQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmRhdGEuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICB2YXIgYWNjb3VudHMgPSByZXMuZGF0YS5hY2NvdW50WyLlvq7ljZoiXTsKICAgICAgICAgIHRoYXQucHJvamVjdEFjY291bnRzID0gW107CgogICAgICAgICAgZm9yICh2YXIga2V5IGluIGFjY291bnRzKSB7CiAgICAgICAgICAgIHRoYXQucHJvamVjdEFjY291bnRzLnB1c2goYWNjb3VudHNba2V5XSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgICAgcmVxdWVzdChHRVRfQUNDT1VOVF9JTkZPLCBNRVRIT0QuUE9TVCwgewogICAgICAgIHByb2plY3RfbmFtZTogIiIKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgdmFyIGFjY291bnRzID0gcmVzLmRhdGEuYWNjb3VudFsi5b6u5Y2aIl07CiAgICAgICAgICB0aGF0LmFsbEFjY291bnRzID0gW107CgogICAgICAgICAgZm9yICh2YXIga2V5IGluIGFjY291bnRzKSB7CiAgICAgICAgICAgIHRoYXQuYWxsQWNjb3VudHMucHVzaChhY2NvdW50c1trZXldKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMucXVlcnlQcm9qZWN0cygpOwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoJ3NldHRpbmcnLCBbJ3BhZ2VNaW5IZWlnaHQnXSkpLCB7fSwgewogICAgZGVzYzogZnVuY3Rpb24gZGVzYygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHQoJ2Rlc2NyaXB0aW9uJyk7CiAgICB9CiAgfSkKfTs="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"new-page\" :style=\"`min-height: ${pageMinHeight}px`\">\r\n    <el-tabs class=\"project_tab\" v-model=\"activeName\" @tab-click=\"spider_handleClick\">\r\n      <el-tab-pane label=\"项目管理\" name=\"first\">\r\n        <div class=\"tab-title\">\r\n          <el-button @click=\"isCreateProjectBtnVisible = true\">+ 创建项目</el-button>\r\n          <el-button @click=\"downloadNewsDataVisible=true\"> 导出舆情数据</el-button>\r\n          <el-dialog\r\n              title=\"提示\"\r\n              :visible.sync=\"downloadNewsDataVisible\"\r\n              width=\"30%\"\r\n              center>\r\n            <p style=\"text-align: center\">请选择需要导出的<b>爬虫项目</b></p>\r\n            <el-select style=\"margin-left: 25%;width: 50%\" v-model=\"downloadNewsDataSelect\" placeholder=\"请选择\">\r\n              <el-option\r\n                  v-for=\"item in allProject\"\r\n                  :key=\"item.name\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.name\">\r\n              </el-option>\r\n            </el-select>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"downloadNewsDataVisible = false\">取 消</el-button>\r\n            <el-button v-loading=\"downloadNewsDataLoading\"\r\n                       @click=\"downloadNewsData\">确 定</el-button>\r\n          </span>\r\n          </el-dialog>\r\n          <el-button @click=\"downloadUserDataVisible=true\" style=\"margin-left: 10px\"> 导出用户数据</el-button>\r\n          <el-dialog\r\n              title=\"提示\"\r\n              :visible.sync=\"downloadUserDataVisible\"\r\n              width=\"30%\"\r\n              center>\r\n            <span>此操作将导出当前所有<b>用户数据</b>，是否继续？</span>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"downloadUserDataVisible = false\">取 消</el-button>\r\n            <el-button v-loading=\"downloadUserDataLoading\" type=\"primary\" @click=\"downloadUserData\">确 定</el-button>\r\n          </span>\r\n          </el-dialog>\r\n        </div>\r\n        <el-card class=\"box-card\">\r\n          <el-table :data=\"allProject\" style=\"width: 100%\">\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"项目名称\" min-width=\"100\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.name }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"创建日期\" min-width=\"100\">\r\n              <template slot-scope=\"scope\">\r\n                <i class=\"el-icon-time\"></i>\r\n                <span style=\"margin-left: 10px\">{{ scope.row.create_time }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" min-width=\"300\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"primary\" @click=\"manageContentSpider(scope.$index, scope.row)\"\r\n                           plain>管理内容爬虫\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"primary\" @click=\"manageHotSpider(scope.$index, scope.row)\"\r\n                           plain>管理热点爬虫\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"primary\" @click=\"manageDistEquip(scope.$index, scope.row)\"\r\n                           plain>管理分布式设备\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"primary\" @click=\"managePlatAccount(scope.$index, scope.row)\"\r\n                           plain>管理平台账户\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"danger\" @click=\"delProject(scope.$index, scope.row)\"\r\n                           plain>删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n        <el-dialog title=\"提示\" :visible.sync=\"isCreateProjectBtnVisible\" width=\"30%\">\r\n          <span>请输入项目名称：</span>\r\n          <el-input placeholder=\"项目名称\" v-model=\"nameForProject\" clearable></el-input>\r\n          <span>请输入作者名称：</span>\r\n          <el-input placeholder=\"项目作者\" v-model=\"authorForProject\" clearable></el-input>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"isCreateProjectBtnVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"createNewProj\">确 定</el-button>\r\n          </span>\r\n        </el-dialog>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"爬虫管理\" name=\"second\" :disabled=\"true\">\r\n        <div class=\"tab-title\">\r\n          <el-button size=\"medium\" @click=\"getContentSpider\"> + 新建爬虫</el-button>\r\n        </div>\r\n        <el-card class=\"box-card\">\r\n          <el-table\r\n              :data=\"spider_tableData\"\r\n              style=\"width: 100%\">\r\n            <el-table-column label=\"起始日期\" sortable width=\"180\">\r\n              <template slot-scope=\"scope\">\r\n                <i class=\"el-icon-time\"></i>\r\n                <span style=\"margin-left: 10px\">{{ scope.row.date }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"name\" label=\"爬虫名称\" min-width=\"180\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"device\" label=\"所属设备\" min-width=\"180\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"status\" label=\"状态\" min-width=\"180\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"tag\" label=\"标签\" min-width=\"100\"\r\n                             :filters=\"[{ text: '已启用', value: '已启用' }, { text: '已停用', value: '已停用' }]\"\r\n                             :filter-method=\"spider_filterTag\" filter-placement=\"bottom-end\">\r\n              <template slot-scope=\"scope\">\r\n                <el-tag :type=\"scope.row.tag === '已启用' ? 'success' : 'danger'\" disable-transitions>{{ scope.row.tag }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" min-width=\"180\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" @click=\"spider_edit(scope.$index, scope.row)\">编辑\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"danger\" @click=\"spider_handleDelete(scope.$index, scope.row)\">删除\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"success\" @click=\"monitorSpider(scope.$index, scope.row)\">监控爬虫状态\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n        <div style=\"height:35px;width:100%\" class=\"clspage\">\r\n          <el-pagination align='center' @current-change=\"spider_handle_user_CurrentChange\" layout=\"prev, pager, next\"\r\n                         :page-size=\"spider_pageSize\" :current-page=\"spider_currentPage\"\r\n                         :total=\"spider_total\"></el-pagination>\r\n        </div>\r\n        <div class=\"dialog\">\r\n          <el-dialog\r\n              title=\"新建爬虫\"\r\n              :visible.sync=\"spider_createDialogVisible\"\r\n              width=\"40%\"\r\n              center>\r\n            <el-select style=\"margin-left: 35%\" v-model=\"addSpider\" multiple placeholder=\"请选择需要新建的爬虫\">\r\n              <el-option\r\n                  v-for=\"item in addSpiderList\"\r\n                  :key=\"item\"\r\n                  :label=\"item\"\r\n                  :value=\"item\">\r\n              </el-option>\r\n            </el-select>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"spider_createDialogVisible = false\">取 消</el-button>\r\n    <el-button type=\"primary\" @click=\"createSpider\">确 定 添 加</el-button>\r\n  </span>\r\n          </el-dialog>\r\n          <el-dialog\r\n              title=\"编辑爬虫\"\r\n              :visible.sync=\"spider_editDialogVisible\"\r\n              width=\"40%\"\r\n              center>\r\n            <div style=\"text-align: center\">\r\n              <span style=\"margin-right:30px \">是否启用爬虫</span>\r\n              <el-switch\r\n                  v-model=\"spider_is_start\"\r\n                  active-color=\"#13ce66\"\r\n                  inactive-color=\"#ff4949\">\r\n              </el-switch>\r\n            </div>\r\n\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button type=\"primary\" @click=\"editSpider\">确 定</el-button>\r\n  </span>\r\n          </el-dialog>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"热点爬虫\" name=\"third\" :disabled=\"true\">\r\n        <div class=\"tab-title\">\r\n          <el-button @click=\"isAddKeywordBtnVisible = true\">+ 添加关键词</el-button>\r\n          <el-button @click=\"isAddHotSpiderBtnVisible = true\">+ 添加热点爬虫</el-button>\r\n        </div>\r\n        <el-card class=\"box-card\">\r\n          <el-table :data=\"allKeywordsForProject\" style=\"width: 100%\">\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"关键词\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.keyword }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"标题\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.title }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"danger\"\r\n                           @click=\"deleteKeywordForProject(scope.$index, scope.row)\" plain>删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n        <el-card class=\"box-card\">\r\n          <el-table :data=\"projectHotSpiders\" style=\"width: 100%\">\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"平台\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.platform }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"状态\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\" v-if=\"scope.row.status\">已启用</span>\r\n                <span style=\"margin-left: 10px\" v-if=\"!scope.row.status\">未启用</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"danger\"\r\n                           @click=\"removeHotSpider(scope.row.platform)\" plain>取消\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n        <el-dialog title=\"提示\" :visible.sync=\"isAddHotSpiderBtnVisible\" width=\"30%\">\r\n          <el-select v-model=\"newHotSpiderForProject\" placeholder=\"请选择\">\r\n            <el-option\r\n                v-for=\"hotSpider in allHotSpiders\"\r\n                :key=\"hotSpider\"\r\n                :label=\"hotSpider\"\r\n                :value=\"hotSpider\">\r\n            </el-option>\r\n          </el-select>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"isAddHotSpiderBtnVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"addHotSpider\">确 定</el-button>\r\n          </span>\r\n        </el-dialog>\r\n        <el-dialog title=\"提示\" :visible.sync=\"isAddKeywordBtnVisible\" width=\"30%\" :before-close=\"handleClose\">\r\n          <el-input placeholder=\"请输入标题\" v-model=\"newTitleForProject\" style=\"margin-bottom: 16px\" clearable>\r\n          </el-input>\r\n          <el-input type=\"textarea\" :rows=\"4\" placeholder=\"请输入关键词，以换行符为分隔\" v-model=\"newKeywordForProject\"></el-input>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"isAddKeywordBtnVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"addHotSpiderKeyword\">确 定</el-button>\r\n          </span>\r\n        </el-dialog>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"定时任务\" name=\"forth\">\r\n        <!--        <div class=\"tab-title\">-->\r\n        <!--          <el-button @click=\"isAddTimedTaskBtnVisible = true\">+ 添加定时任务</el-button>-->\r\n        <!--        </div>-->\r\n        <el-card class=\"box-card\">\r\n          <el-table :data=\"allScheduleTask\" style=\"width: 100%\">\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"名称\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.name }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"类型\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.trigger }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"任务\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.task }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"状态\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\" v-if=\"scope.row.status === 1\">运行中</span>\r\n                <span style=\"margin-left: 10px\" v-if=\"scope.row.status === 0\">已暂停</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"success\" @click=\"showUpdateTimingTaskDialog(scope.row)\" plain>修改\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"danger\" v-if=\"scope.row.status === 1\"\r\n                           @click=\"pauseTimedTask(scope.row.name)\" plain>暂停\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"success\" v-if=\"scope.row.status === 0\"\r\n                           @click=\"resumeTimedTask(scope.row.name)\" plain>启用\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n        <el-dialog title=\"提示\" :visible.sync=\"isAddTimedTaskBtnVisible\" width=\"30%\">\r\n          <div class=\"demo-input-suffix\" v-if=\"timingTask.trigger === 'interval'\">\r\n            <div class=\"sub-title\">名称</div>\r\n            <el-input placeholder=\"请输入名称\" v-model=\"timingTask.name\" clearable></el-input>\r\n            <div class=\"sub-title\">天数</div>\r\n            <el-input placeholder=\"请输入天数\" v-model=\"timingTask.kwargs.day\" type=\"number\" clearable></el-input>\r\n            <div class=\"sub-title\">时数</div>\r\n            <el-input placeholder=\"请输入时数\" v-model=\"timingTask.kwargs.hour\" type=\"number\" clearable></el-input>\r\n            <div class=\"sub-title\">分数</div>\r\n            <el-input placeholder=\"请输入分数\" v-model=\"timingTask.kwargs.minute\" type=\"number\" clearable></el-input>\r\n            <div class=\"sub-title\">秒数</div>\r\n            <el-input placeholder=\"请输入秒数\" v-model=\"timingTask.kwargs.second\" type=\"number\" clearable></el-input>\r\n          </div>\r\n          <div class=\"demo-input-suffix block\" v-if=\"timingTask.trigger === 'date'\">\r\n            <div class=\"sub-title\">名称</div>\r\n            <el-input placeholder=\"请输入名称\" v-model=\"timingTask.name\" clearable>\r\n            </el-input>\r\n            <div class=\"sub-title\">日期</div>\r\n            <el-date-picker v-model=\"timingTask.kwargs\" type=\"datetime\" placeholder=\"选择日期时间\"></el-date-picker>\r\n          </div>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"isAddTimedTaskBtnVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"updateTimingTask\">确 定</el-button>\r\n          </span>\r\n        </el-dialog>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"分布式设备\" name=\"fifth\" :disabled=\"true\">\r\n        <div class=\"tab-title\">\r\n          <el-button @click=\"isAddDistEquipBtnVisible = true\">+ 添加分布式设备</el-button>\r\n        </div>\r\n        <el-card class=\"box-card\">\r\n          <el-table :data=\"distEquipsFroPoj.distEquips\" style=\"width: 100%\">\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"IP地址\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.ip }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"端口号\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.port }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"用户名\">\r\n              <template slot-scope=\"scope\">\r\n                <i class=\"el-icon-time\"></i>\r\n                <span style=\"margin-left: 10px\">{{ scope.row.username }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"设备地址\">\r\n              <template slot-scope=\"scope\">\r\n                <i class=\"el-icon-time\"></i>\r\n                <span style=\"margin-left: 10px\">{{ scope.row.address }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"danger\"\r\n                           @click=\"removeProjectDevice(scope.row.ip, scope.row.port)\" plain>删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n        <el-dialog title=\"提示\" :visible.sync=\"isAddDistEquipBtnVisible\" width=\"30%\">\r\n          <el-select v-model=\"newDistEquipIp\" placeholder=\"请选择\">\r\n            <el-option\r\n                v-for=\"distEquip in allDistEquip\"\r\n                :key=\"distEquip.ip\"\r\n                :label=\"distEquip.ip + ':' + distEquip.port\"\r\n                :value=\"distEquip.ip + ':' + distEquip.port\">\r\n            </el-option>\r\n          </el-select>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"isAddDistEquipBtnVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"addProjectDevice()\">确 定</el-button>\r\n          </span>\r\n        </el-dialog>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"平台账户\" name=\"sixth\" :disabled=\"true\">\r\n        <div class=\"tab-title\">\r\n          <el-button @click=\"isAddPlatformAccountsBtnVisible = true\">+ 添加平台账户</el-button>\r\n        </div>\r\n        <el-card class=\"box-card\">\r\n          <el-table :data=\"projectAccounts\" style=\"width: 100%\">\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"名称\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.user }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"平台\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.platform }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"添加日期\">\r\n              <template slot-scope=\"scope\">\r\n                <i class=\"el-icon-time\"></i>\r\n                <span style=\"margin-left: 10px\">{{ scope.row.date }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"danger\"\r\n                           @click=\"deleteProjectAccount(scope.row)\"\r\n                           plain>删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n        <el-dialog title=\"提示\" :visible.sync=\"isAddPlatformAccountsBtnVisible\" width=\"30%\">\r\n          <el-select v-model=\"newProjectAccount\" placeholder=\"请选择\">\r\n            <el-option\r\n                v-for=\"item in allAccounts\"\r\n                :key=\"item.user\"\r\n                :label=\"item.user\"\r\n                :value=\"item.user\">\r\n            </el-option>\r\n          </el-select>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"isAddPlatformAccountsBtnVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"addProjectAccount\">确 定</el-button>\r\n          </span>\r\n        </el-dialog>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"爬虫状态\" name=\"seventh\" :disabled=\"true\">\r\n        <el-card class=\"box-card\">\r\n          <el-row>\r\n            <el-col :span=\"8\">\r\n              <div class=\"grid-content bg-purple\">\r\n                <el-card class=\"box-card2\">\r\n                  <h2>开始时间</h2>\r\n                  <h3>{{ spiderStatus.startTime }}</h3>\r\n                </el-card>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n              <div class=\"grid-content bg-purple-light\">\r\n                <el-card class=\"box-card2\">\r\n                  <h2>停止时间</h2>\r\n                  <h3>{{ spiderStatus.endTime }}</h3>\r\n                </el-card>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n              <div class=\"grid-content bg-purple\">\r\n                <el-card class=\"box-card2\">\r\n                  <h2>终止原因</h2>\r\n                  <h3>{{ spiderStatus.closedReason }}</h3>\r\n                </el-card>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row>\r\n            <el-col :span=\"12\">\r\n              <div class=\"grid-content bg-purple\">\r\n                <el-card class=\"box-card2\">\r\n                  <div id=\"dataVolume\" style=\"width: 707px; height: 300px\"></div>\r\n                </el-card>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n              <div class=\"grid-content bg-purple-light\">\r\n                <el-card class=\"box-card2\">\r\n                  <div id=\"reqRespVolume\" style=\"width: 707px; height: 300px\"></div>\r\n                </el-card>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row>\r\n            <el-col :span=\"12\">\r\n              <div class=\"grid-content bg-purple\">\r\n                <el-card class=\"box-card2\">\r\n                  <div id=\"queueVolume\" style=\"width: 707px; height: 300px\"></div>\r\n                </el-card>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n              <div class=\"grid-content bg-purple-light\">\r\n                <el-card class=\"box-card2\">\r\n                  <div id=\"statusRespVolume\" style=\"width: 707px; height: 300px\"></div>\r\n                </el-card>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n        </el-card>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n<style lang=\"less\" src=\"./index.less\"></style>\r\n\r\n<script>\r\nimport {mapState} from 'vuex';\r\nimport {METHOD, request} from '@/utils/request';\r\nimport {\r\n  ADD_HOT_SPIDER,\r\n  ADD_KEYWORD,\r\n  CONTENT_SPIDER,\r\n  GET_ACCOUNT_INFO,\r\n  GET_ALL_CONTENT_SPIDER,\r\n  GET_CUSTOM_KEYWORDS,\r\n  GET_DEVICE_INFO,\r\n  GET_HOT_SPIDER,\r\n  GET_PROJECTS_INFO,\r\n  PAUSE_TIMING,\r\n  RM_HOT_SPIDER,\r\n  SPIDER_DEL_ADD,\r\n  SPIDER_STATUS,\r\n  START_TIMING,\r\n  UPDATE_PRO_ACCOUNT,\r\n  UPDATE_PROJECT_DEVICE,\r\n  UPDATE_TIMING_JOB,\r\n  SPIDER_MONITOR,\r\n  CREATE_PROJ,\r\n  DEL_PROJ,\r\n  DOWNLOAD_USER,\r\n  DOWNLOAD_NEWS,\r\n} from '@/services/api';\r\nimport * as echarts from \"echarts\";\r\n\r\n\r\n// import axios from \"axios\";\r\n\r\nexport default {\r\n  name: 'proj_manage',\r\n  i18n: require('./i18n'),\r\n  data() {\r\n    return {\r\n      downloadNewsDataSelect: \"\",\r\n      downloadNewsDataLoading: false,\r\n      downloadUserDataLoading: false,\r\n      downloadUserDataVisible: false,\r\n      downloadNewsDataVisible: false,\r\n      nameForProject: '',\r\n      authorForProject: '',\r\n      addSpider: [],\r\n      addSpiderList: [],\r\n      nowProject: '',\r\n      edit_spider_index: null,\r\n      edit_spider_row: null,\r\n      spider_is_start: true,\r\n      activeName: 'first',\r\n      spider_pageSize: 7,\r\n      spider_currentPage: 1,\r\n      spider_total: 4,\r\n      spider_tableData: [],\r\n      spider_createDialogVisible: false,\r\n      spider_editDialogVisible: false,\r\n      allHotSpiders: [],\r\n      allKeywordsForProject: [],\r\n      newHotSpiderForProject: \"\",\r\n      projectHotSpiders: [],\r\n      isAddKeywordBtnVisible: false,\r\n      isAddHotSpiderBtnVisible: false,\r\n      newTitleForProject: \"\",\r\n      newKeywordForProject: \"\",\r\n\r\n      isAddTimedTaskBtnVisible: false,\r\n      isAddDistEquipBtnVisible: false,\r\n      isCreateProjectBtnVisible: false,\r\n      isAddPlatformAccountsBtnVisible: false,\r\n\r\n      allProject: [],\r\n      currentProject: null,\r\n\r\n      newDistEquipIp: \"\",\r\n      allDistEquip: [],\r\n      distEquipsFroPoj: {projectName: \"\", distEquips: []},\r\n\r\n      timingTask: {},\r\n      allScheduleTask: [],\r\n      projectAccounts: [],\r\n      allAccounts: [],\r\n\r\n      newProjectAccount: \"\",\r\n      spiderStatus: {\r\n        startTime: \"\",\r\n        endTime: \"\",\r\n        closedReason: \"\"\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    downloadNewsData() {\r\n      this.downloadNewsDataLoading = true\r\n      request(DOWNLOAD_NEWS, METHOD.POST,{\r\n        project_name: this.downloadNewsDataSelect\r\n      }).then(res => {\r\n        const data = res.data\r\n        // let url = window.URL.createObjectURL(data)\r\n        let binaryData = [];\r\n        binaryData.push(data);\r\n        let url = window.URL.createObjectURL(new Blob(binaryData));\r\n        var a = document.createElement('a')\r\n        document.body.appendChild(a)\r\n        a.href = url\r\n        a.download = 'news_rawdata.csv'\r\n        a.click()\r\n        window.URL.revokeObjectURL(url)\r\n        this.downloadNewsDataLoading = false\r\n        this.downloadNewsDataVisible = false\r\n      })\r\n    },\r\n    downloadUserData() {\r\n      this.downloadUserDataLoading = true\r\n      request(DOWNLOAD_USER, METHOD.GET).then(res => {\r\n        const data = res.data\r\n        // let url = window.URL.createObjectURL(data)\r\n        let binaryData = [];\r\n        binaryData.push(data);\r\n        let url = window.URL.createObjectURL(new Blob(binaryData));\r\n        var a = document.createElement('a')\r\n        document.body.appendChild(a)\r\n        a.href = url\r\n        a.download = 'users_rawdata.csv'\r\n        a.click()\r\n        window.URL.revokeObjectURL(url)\r\n        this.downloadUserDataLoading = false\r\n        this.downloadUserDataVisible = false\r\n      })\r\n    },\r\n    delProject(index, row) {\r\n      this.$confirm('此操作将删除该项目, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n        center: true\r\n      }).then(() => {\r\n        request(DEL_PROJ, METHOD.POST, {\r\n          project_name: row.name\r\n        }).then(res => {\r\n          if (res.data.code === 200) {\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除成功!'\r\n            });\r\n          } else {\r\n            this.$message({\r\n              type: 'warning',\r\n              message: '删除失败'\r\n            });\r\n          }\r\n          this.queryProjects()\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });\r\n      });\r\n    },\r\n    completeDate(value) {\r\n      return value < 10 ? \"0\" + value : value;\r\n    },\r\n    getNowFormatDay(nowDate) {\r\n      var char = \"-\";\r\n      if (nowDate == null) {\r\n        nowDate = new Date();\r\n      }\r\n      var day = nowDate.getDate();\r\n      var month = nowDate.getMonth() + 1;//注意月份需要+1\r\n      var year = nowDate.getFullYear();\r\n      //补全0，并拼接\r\n      return year + char + this.completeDate(month) + char + this.completeDate(day);\r\n    },\r\n    getNowFormatTime() {\r\n      var nowDate = new Date();\r\n      var colon = \":\";\r\n      var h = nowDate.getHours();\r\n      var m = nowDate.getMinutes();\r\n      var s = nowDate.getSeconds();\r\n      //补全0，并拼接\r\n      return this.getNowFormatDay(nowDate) + \" \" + this.completeDate(h) + colon + this.completeDate(m) + colon + this.completeDate(s);\r\n    },\r\n    getLastFormatDay(nowDate) {\r\n      var char = \"-\";\r\n      if (nowDate == null) {\r\n        nowDate = new Date();\r\n      }\r\n      var day = nowDate.getDate();\r\n      var month = nowDate.getMonth() + 1;//注意月份需要+1\r\n      var year = nowDate.getFullYear();\r\n      //补全0，并拼接\r\n      return year - 1 + char + this.completeDate(month) + char + this.completeDate(day);\r\n    },\r\n    getLastFormatTime() {\r\n      var nowDate = new Date();\r\n      var colon = \":\";\r\n      var h = nowDate.getHours();\r\n      var m = nowDate.getMinutes();\r\n      var s = nowDate.getSeconds();\r\n      //补全0，并拼接\r\n      return this.getLastFormatDay(nowDate) + \" \" + this.completeDate(h) + colon + this.completeDate(m) + colon + this.completeDate(s);\r\n    },\r\n    createNewProj() {\r\n      let that = this\r\n      request(CREATE_PROJ, METHOD.POST, {\r\n        param: {\r\n          \"author\": that.authorForProject,\r\n          \"create_time\": that.getNowFormatTime(),\r\n          \"name\": that.nameForProject,\r\n          \"spider_manager\": {\r\n            \"project_name\": that.nameForProject,\r\n            \"spiders\": {}\r\n          },\r\n          \"hot_spider_config\": {},\r\n          \"devices_manager\": {\r\n            \"127.0.0.1\": true\r\n          },\r\n          \"crawl_time\": {\r\n            \"start\": that.getLastFormatTime(),\r\n            \"end\": that.getNowFormatTime()\r\n          }\r\n        }\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          this.$message({\r\n            message: '创建项目成功',\r\n            type: 'success'\r\n          });\r\n          this.queryProjects()\r\n        } else {\r\n          this.$message({\r\n            message: '创建项目失败',\r\n            type: 'warning'\r\n          });\r\n        }\r\n      })\r\n\r\n      this.isCreateProjectBtnVisible = false\r\n    },\r\n    getContentSpider() {\r\n      this.spider_createDialogVisible = true\r\n      let that = this\r\n      that.addSpider = []\r\n      request(GET_ALL_CONTENT_SPIDER, METHOD.GET, {}).then(res => {\r\n        let nowSpider = []\r\n        for (let i in this.spider_tableData) {\r\n          nowSpider.push(this.spider_tableData[i]['name'])\r\n        }\r\n        let spiderOptions = res.data.content_spiders.filter(v => !nowSpider.includes(v))\r\n        that.addSpiderList = spiderOptions\r\n      })\r\n    },\r\n    getHotSpiders() {\r\n      const that = this;\r\n      request(GET_HOT_SPIDER, METHOD.GET).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.allHotSpiders = [];\r\n          that.allHotSpiders = res.data.hot_spiders;\r\n        }\r\n      });\r\n    },\r\n    getHotSpidersForProject(projectName) {\r\n      const that = this;\r\n      request(GET_PROJECTS_INFO, METHOD.POST, {\r\n        project_name: projectName\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          let allSpiders = res.data.message.hot_spider_config;\r\n          that.projectHotSpiders = [];\r\n          for (let key in allSpiders) {\r\n            that.projectHotSpiders.push({\"platform\": key, \"status\": allSpiders[key]});\r\n          }\r\n        }\r\n      });\r\n    },\r\n    getAllKeywordsForProject() {\r\n      const that = this;\r\n      let project_name = that.currentProject.name;\r\n      request(GET_CUSTOM_KEYWORDS, METHOD.POST, {\r\n        \"project_name\": project_name\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.allKeywordsForProject = [];\r\n          that.allKeywordsForProject = res.data.message;\r\n        }\r\n      });\r\n    },\r\n    addHotSpider() {\r\n      const that = this;\r\n      let projectName = that.currentProject.name;\r\n      request(ADD_HOT_SPIDER, METHOD.POST, {\r\n        \"project_name\": projectName,\r\n        \"add_spider\": [that.newHotSpiderForProject]\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.getHotSpidersForProject(that.currentProject.name);\r\n          that.isAddHotSpiderBtnVisible = false;\r\n        }\r\n      });\r\n    },\r\n    removeHotSpider(hotSpider) {\r\n      const that = this;\r\n      let projectName = that.currentProject.name;\r\n      request(RM_HOT_SPIDER, METHOD.POST, {\r\n        \"project_name\": projectName,\r\n        \"rm_spider\": [hotSpider]\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.getHotSpidersForProject(that.currentProject.name);\r\n          that.isAddHotSpiderBtnVisible = false;\r\n        }\r\n      });\r\n    },\r\n    addHotSpiderKeyword() {\r\n      const that = this;\r\n      let project_name = that.currentProject.name;\r\n      let newTitle = that.newTitleForProject;\r\n      let allKeywords = that.newKeywordForProject.split(\"\\n\");\r\n      request(ADD_KEYWORD, METHOD.POST, {\r\n        \"project_name\": project_name,\r\n        \"add_keywords\": {\"title\": newTitle, \"keywords\": allKeywords},\r\n        \"rm_keywords\": {}\r\n      }).then(function () {\r\n        that.getAllKeywordsForProject();\r\n        that.isAddKeywordBtnVisible = false;\r\n      });\r\n    },\r\n    deleteKeywordForProject(index, row) {\r\n      const that = this;\r\n      let project_name = that.currentProject.name;\r\n      let keyword = {};\r\n      keyword[\"title\"] = row.title;\r\n      keyword[\"keywords\"] = [row.keyword];\r\n      request(ADD_KEYWORD, METHOD.POST, {\r\n        \"project_name\": project_name,\r\n        \"add_keywords\": {},\r\n        \"rm_keywords\": keyword\r\n      }).then(function () {\r\n        that.getAllKeywordsForProject();\r\n        that.isAddKeywordBtnVisible = false;\r\n\r\n      });\r\n    },\r\n    queryProjects() {\r\n      const that = this;\r\n      request(GET_PROJECTS_INFO, METHOD.POST, {\r\n        project_name: \"\"\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.allProject = res.data.message.projects;\r\n          console.log(that.allProject)\r\n        }\r\n      });\r\n    },\r\n    manageContentSpider(index, row) {\r\n      const that = this;\r\n      that.activeName = \"second\";\r\n      this.getAllContentSpider(row.name)\r\n      this.nowProject = row.name\r\n    },\r\n    async getAllContentSpider(projectName) {\r\n      await request(CONTENT_SPIDER, METHOD.POST, {\r\n        project_name: projectName,\r\n      }).then(res => {\r\n        let newData = []\r\n        for (let device in res.data.content) {\r\n          for (let spider in res.data.content[device]) {\r\n            newData.push({\r\n              date: res.data.content[device][spider]['start_time'],\r\n              name: spider,\r\n              n_name: spider,\r\n              tag: res.data.content[device][spider]['label'] === true ? '已启用' : '已禁用',\r\n              device: device,\r\n              status: res.data.content[device][spider]['status']\r\n            })\r\n          }\r\n        }\r\n        this.spider_tableData = newData\r\n      })\r\n\r\n    },\r\n    manageHotSpider(index) {\r\n      const that = this;\r\n      that.activeName = \"third\";\r\n      that.currentProject = that.allProject[index];\r\n      let allSpiders = that.currentProject.hot_spider_config;\r\n      that.projectHotSpiders = [];\r\n      for (let key in allSpiders) {\r\n        that.projectHotSpiders.push({\"platform\": key, \"status\": allSpiders[key]});\r\n      }\r\n      that.getHotSpiders();\r\n      that.getAllKeywordsForProject();\r\n    },\r\n    manageDistEquip(index) {\r\n      const that = this;\r\n      that.activeName = \"fifth\";\r\n      that.currentProject = that.allProject[index];\r\n      request(GET_DEVICE_INFO, METHOD.POST, {\r\n        project_name: that.currentProject.name\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.distEquipsFroPoj.distEquips = [];\r\n          for (let key in res.data.message) {\r\n            that.distEquipsFroPoj.distEquips.push(res.data.message[key]);\r\n          }\r\n        }\r\n      });\r\n      request(GET_DEVICE_INFO, METHOD.POST, {\r\n        project_name: \"\"\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          let distEquips = res.data.message;\r\n          that.allDistEquip = [];\r\n          for (let key in distEquips) {\r\n            that.allDistEquip.push(distEquips[key]);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    managePlatAccount(index) {\r\n      const that = this;\r\n      that.activeName = \"sixth\";\r\n      that.currentProject = that.allProject[index];\r\n      that.queryProjectAccount();\r\n    },\r\n    reloadProjectDevice() {\r\n      const that = this;\r\n      request(GET_DEVICE_INFO, METHOD.POST, {\r\n        project_name: that.currentProject.name\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.distEquipsFroPoj.distEquips = [];\r\n          for (let key in res.data.message) {\r\n            that.distEquipsFroPoj.distEquips.push(res.data.message[key]);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    addProjectDevice() {\r\n      const that = this;\r\n      request(UPDATE_PROJECT_DEVICE, METHOD.POST, {\r\n        \"project_name\": that.currentProject.name,\r\n        \"add_ip\": [that.newDistEquipIp],\r\n        \"rm_ip\": []\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.reloadProjectDevice();\r\n          that.isAddDistEquipBtnVisible = false;\r\n        }\r\n      });\r\n    },\r\n    removeProjectDevice(distEquipIpToRemove, distEquipPortToRemove) {\r\n      const that = this;\r\n      let ip2port = distEquipIpToRemove + \":\" + distEquipPortToRemove;\r\n      request(UPDATE_PROJECT_DEVICE, METHOD.POST, {\r\n        \"project_name\": that.currentProject.name,\r\n        \"add_ip\": [],\r\n        \"rm_ip\": [ip2port]\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.reloadProjectDevice();\r\n        }\r\n      });\r\n    },\r\n    updateTimingTask() {\r\n      const that = this;\r\n      let a_name = that.timingTask.name;\r\n\r\n      let a_obj = {};\r\n      a_obj[\"timing_job\"] = {};\r\n      if (that.timingTask.trigger === \"interval\") {\r\n        that.timingTask.kwargs.day = Number(that.timingTask.kwargs.day);\r\n        that.timingTask.kwargs.hour = Number(that.timingTask.kwargs.hour);\r\n        that.timingTask.kwargs.minute = Number(that.timingTask.kwargs.minute);\r\n        that.timingTask.kwargs.second = Number(that.timingTask.kwargs.second);\r\n      }\r\n\r\n      a_obj[\"timing_job\"][a_name] = that.timingTask;\r\n\r\n      request(UPDATE_TIMING_JOB, METHOD.POST, a_obj).then(function () {\r\n        that.queryAllScheduleTask();\r\n        that.isAddTimedTaskBtnVisible = false;\r\n      });\r\n    },\r\n    spider_filterTag(value, row) {\r\n      return row.tag === value;\r\n    },\r\n    spider_handleClick(tab) {\r\n      const that = this;\r\n      if (tab.index === \"3\") {\r\n        that.queryAllScheduleTask();\r\n      } else if (tab.index === \"5\") {\r\n        that.queryProjectAccount();\r\n      } else if (tab.index === \"2\") {\r\n        that.getHotSpiders();\r\n        that.activeName = \"third\";\r\n      }\r\n    },\r\n    queryAllScheduleTask() {\r\n      const that = this;\r\n      request(GET_PROJECTS_INFO, METHOD.POST, {\r\n        project_name: \"\"\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          let jobManager = res.data.message.job_manager;\r\n          that.allScheduleTask = []\r\n          for (let key in jobManager) {\r\n            that.allScheduleTask.push(jobManager[key]);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    spider_handleDelete(index, row) {\r\n      const that = this;\r\n      this.$confirm('此操作将删除该爬虫, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n        center: true\r\n      }).then(() => {\r\n        request(SPIDER_DEL_ADD, METHOD.POST, {\r\n          \"project_name\": that.nowProject,\r\n          \"add_spiders\": [],\r\n          \"rm_spiders\": row.n_name\r\n        }).then(res => {\r\n          if (res.data.code == 300) {\r\n            this.$message({\r\n              message: '不存在该爬虫项目',\r\n              type: 'warning'\r\n            });\r\n          } else {\r\n            this.$message({\r\n              message: '删除爬虫成功',\r\n              type: 'success'\r\n            });\r\n            this.spider_tableData.splice(index, 1)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });\r\n      });\r\n    },\r\n    spider_handle_user_CurrentChange(val) {\r\n      this.currentPage = val;\r\n    },\r\n    createSpider() {\r\n      //在这里请求服务器获取到可以添加的爬虫，并且对比此项目已有的爬虫更新options\r\n      //请求服务器新建爬虫\r\n      if (this.addSpider.length == 0) {\r\n        this.$message({\r\n          message: '未选择爬虫',\r\n          type: 'warning'\r\n        });\r\n      } else {\r\n        request(SPIDER_DEL_ADD, METHOD.POST, {\r\n          \"project_name\": this.nowProject,\r\n          \"add_spiders\": this.addSpider,\r\n          \"rm_spiders\": \"\"\r\n        }).then(res => {\r\n          if (res.data.code == 300) {\r\n            this.$message({\r\n              message: '不存在该爬虫项目',\r\n              type: 'warning'\r\n            });\r\n          } else {\r\n            this.$message({\r\n              message: '添加成功',\r\n              type: 'success'\r\n            });\r\n            this.getAllContentSpider(this.nowProject)\r\n          }\r\n        })\r\n      }\r\n      this.spider_createDialogVisible = false\r\n    },\r\n    spider_edit(index, row) {\r\n      this.spider_editDialogVisible = true\r\n      this.spider_is_start = row.tag == '已启用' ? true : false\r\n      this.edit_spider_index = index\r\n      this.edit_spider_row = row\r\n      // 根据原始数据更新按钮\r\n    },\r\n    editSpider() {\r\n      let status = this.edit_spider_row.tag == '已启用' ? false : true\r\n      let name = this.edit_spider_row.n_name\r\n      let spider_status = {}\r\n      spider_status[name] = status\r\n      request(SPIDER_STATUS, METHOD.POST, {\r\n        project_name: this.nowProject,\r\n        spider_status: spider_status\r\n      }).then(res => {\r\n        if (res.data.code == 300) {\r\n          this.$message({\r\n            message: '不存在该爬虫项目',\r\n            type: 'warning'\r\n          });\r\n        } else {\r\n          this.$message({\r\n            message: '编辑爬虫成功',\r\n            type: 'success'\r\n          });\r\n          this.spider_tableData[this.edit_spider_index].tag = this.spider_is_start ? \"已启用\" : \"已停用\"\r\n        }\r\n      })\r\n      this.spider_editDialogVisible = false\r\n    },\r\n    monitorSpider(index, row) {\r\n      console.log(index, row);\r\n      const that = this;\r\n      that.activeName = \"seventh\";\r\n      request(SPIDER_MONITOR, METHOD.POST, {\r\n        \"project_name\": that.nowProject,\r\n        \"platform\": row.n_name\r\n      }).then(function (e) {\r\n        if (e.data.code === 200)\r\n          that.parseSpiderStatus(e.data.data);\r\n      });\r\n    },\r\n    parseSpiderStatus(originData) {\r\n      this.spiderStatus.startTime = originData.start_time;\r\n      this.spiderStatus.endTime = originData.end_time;\r\n      this.spiderStatus.closedReason = originData.closed_reason;\r\n\r\n      let dataVolumeChartDom = document.getElementById('dataVolume');\r\n      let dataVolumeChart = echarts.init(dataVolumeChartDom);\r\n      let dataVolumeChartOption = {\r\n        title: {\r\n          text: \"数据量\"\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['数据量']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: originData.x\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          name: '数据量',\r\n          type: 'line',\r\n          stack: 'Total',\r\n          data: originData[\"数据量\"],\r\n          smooth: true\r\n        }]\r\n      };\r\n      dataVolumeChartOption && dataVolumeChart.setOption(dataVolumeChartOption);\r\n\r\n      let reqRespVolumeChartDom = document.getElementById('reqRespVolume');\r\n      let reqRespVolumeChart = echarts.init(reqRespVolumeChartDom);\r\n      let reqRespVolumeChartOption = {\r\n        title: {\r\n          text: \"请求和响应量\"\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['请求量', '响应量']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: originData.x\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '请求量',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: originData[\"请求量\"],\r\n            smooth: true\r\n          },\r\n          {\r\n            name: '响应量',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: originData[\"响应量\"],\r\n            smooth: true\r\n          }\r\n        ]\r\n      };\r\n      reqRespVolumeChartOption && reqRespVolumeChart.setOption(reqRespVolumeChartOption);\r\n\r\n      let queueVolumeChartDom = document.getElementById('queueVolume');\r\n      let queueVolumeChart = echarts.init(queueVolumeChartDom);\r\n      let queueVolumeChartOption = {\r\n        title: {\r\n          text: \"队列量\"\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['待请求数量', '已抓取数量']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: originData.x\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '待请求数量',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: originData[\"待请求数量\"],\r\n            smooth: true\r\n          },\r\n          {\r\n            name: '已抓取数量',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: originData[\"已抓取数量\"],\r\n            smooth: true\r\n          }\r\n        ]\r\n      };\r\n      queueVolumeChartOption && queueVolumeChart.setOption(queueVolumeChartOption);\r\n\r\n      let statusRespVolumeChartDom = document.getElementById('statusRespVolume');\r\n      let statusRespVolumeChart = echarts.init(statusRespVolumeChartDom);\r\n      let statusRespVolumeChartOption = {\r\n        title: {\r\n          text: \"状态码响应数\"\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['200', '301', '404']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: originData.x\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '200',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: originData[\"200\"],\r\n            smooth: true\r\n          },\r\n          {\r\n            name: '301',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: originData[\"301\"],\r\n            smooth: true\r\n          },\r\n          {\r\n            name: '404',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: originData[\"404\"],\r\n            smooth: true\r\n          }\r\n        ]\r\n      };\r\n      statusRespVolumeChartOption && statusRespVolumeChart.setOption(statusRespVolumeChartOption);\r\n    },\r\n    showUpdateTimingTaskDialog(job) {\r\n      this.timingTask = job;\r\n      this.isAddTimedTaskBtnVisible = true;\r\n    },\r\n    resumeTimedTask(job_name) {\r\n      const that = this;\r\n      request(START_TIMING, METHOD.POST, {\r\n        \"timing_job_name\": job_name\r\n      }).then(function () {\r\n        that.queryAllScheduleTask();\r\n        that.isAddTimedTaskBtnVisible = false;\r\n      });\r\n    },\r\n    pauseTimedTask(job_name) {\r\n      const that = this;\r\n      request(PAUSE_TIMING, METHOD.POST, {\r\n        \"timing_job_name\": job_name\r\n      }).then(function () {\r\n        that.queryAllScheduleTask();\r\n        that.isAddTimedTaskBtnVisible = false;\r\n      });\r\n    },\r\n    addProjectAccount() {\r\n      const that = this;\r\n      let pro_name = that.currentProject.name;\r\n      let account_name = that.newProjectAccount;\r\n      request(UPDATE_PRO_ACCOUNT, METHOD.POST, {\r\n        \"project_name\": pro_name,\r\n        \"update_acc\": {\r\n          \"微博\": {\r\n            \"add\": [account_name],\r\n            \"rm\": []\r\n          }\r\n        }\r\n      }).then(function () {\r\n        that.queryProjectAccount();\r\n        that.isAddPlatformAccountsBtnVisible = false;\r\n      });\r\n    },\r\n    deleteProjectAccount(row) {\r\n      const that = this;\r\n      let pro_name = that.currentProject.name;\r\n      let account_name = row.user;\r\n      request(UPDATE_PRO_ACCOUNT, METHOD.POST, {\r\n        \"project_name\": pro_name,\r\n        \"update_acc\": {\r\n          \"微博\": {\r\n            \"add\": [],\r\n            \"rm\": [account_name]\r\n          }\r\n        }\r\n      }).then(function () {\r\n        that.queryProjectAccount();\r\n        that.isAddPlatformAccountsBtnVisible = false;\r\n      });\r\n    },\r\n    handleClose() {\r\n      this.isAddDistEquipBtnVisible = false;\r\n    },\r\n    queryProjectAccount() {\r\n      const that = this;\r\n      let pro_name = that.currentProject.name;\r\n      request(GET_ACCOUNT_INFO, METHOD.POST, {\r\n        project_name: pro_name\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          let accounts = res.data.account[\"微博\"];\r\n          that.projectAccounts = []\r\n          for (let key in accounts) {\r\n            that.projectAccounts.push(accounts[key]);\r\n          }\r\n        }\r\n      });\r\n      request(GET_ACCOUNT_INFO, METHOD.POST, {\r\n        project_name: \"\"\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          let accounts = res.data.account[\"微博\"];\r\n          that.allAccounts = []\r\n          for (let key in accounts) {\r\n            that.allAccounts.push(accounts[key]);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.queryProjects();\r\n  },\r\n  computed: {\r\n    ...mapState('setting', ['pageMinHeight']),\r\n    desc() {\r\n      return this.$t('description')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import \"index\";\r\n\r\n.box-card {\r\n  margin: 20px;\r\n}\r\n\r\n.tab-title {\r\n  display: flex;\r\n  flex-flow: row;\r\n  padding: 20px 20px 0;\r\n}\r\n\r\n.box-card2 {\r\n  margin: 8px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/pages/proj_manage"}]}