{"remainingRequest":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\babel-loader\\lib\\index.js!D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project\\spiderPlatform\\spider_platform\\src\\layouts\\tabs\\TabsView.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project\\spiderPlatform\\spider_platform\\src\\layouts\\tabs\\TabsView.vue","mtime":1646988546855},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646988157970},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\babel-loader\\lib\\index.js","mtime":1646988157969},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646988157970},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\index.js","mtime":1646988174758}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TabsView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <admin-layout>\r\n    <contextmenu :itemList=\"menuItemList\" :visible.sync=\"menuVisible\" @select=\"onMenuSelect\" />\r\n    <tabs-head\r\n        v-if=\"multiPage\"\r\n        :active=\"activePage\"\r\n        :page-list=\"pageList\"\r\n        @change=\"changePage\"\r\n        @close=\"remove\"\r\n        @refresh=\"refresh\"\r\n        @contextmenu=\"onContextmenu\"\r\n    />\r\n    <div :class=\"['tabs-view-content', layout, pageWidth]\" :style=\"`margin-top: ${multiPage ? -24 : 0}px`\">\r\n      <page-toggle-transition :disabled=\"animate.disabled\" :animate=\"animate.name\" :direction=\"animate.direction\">\r\n        <a-keep-alive :exclude-keys=\"excludeKeys\" v-if=\"multiPage && cachePage\" v-model=\"clearCaches\">\r\n          <router-view v-if=\"!refreshing\" ref=\"tabContent\" :key=\"$route.path\" />\r\n        </a-keep-alive>\r\n        <router-view ref=\"tabContent\" v-else-if=\"!refreshing\" />\r\n      </page-toggle-transition>\r\n    </div>\r\n  </admin-layout>\r\n</template>\r\n\r\n<script>\r\nimport AdminLayout from '@/layouts/AdminLayout'\r\nimport Contextmenu from '@/components/menu/Contextmenu'\r\nimport PageToggleTransition from '@/components/transition/PageToggleTransition'\r\nimport {mapState, mapMutations} from 'vuex'\r\nimport {getI18nKey} from '@/utils/routerUtil'\r\nimport AKeepAlive from '@/components/cache/AKeepAlive'\r\nimport TabsHead from '@/layouts/tabs/TabsHead'\r\n\r\nexport default {\r\n  name: 'TabsView',\r\n  i18n: require('./i18n'),\r\n  components: {TabsHead, PageToggleTransition, Contextmenu, AdminLayout , AKeepAlive },\r\n  data () {\r\n    return {\r\n      clearCaches: [],\r\n      pageList: [],\r\n      activePage: '',\r\n      menuVisible: false,\r\n      refreshing: false,\r\n      excludeKeys: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState('setting', ['multiPage', 'cachePage', 'animate', 'layout', 'pageWidth']),\r\n    menuItemList() {\r\n      return [\r\n        { key: '1', icon: 'vertical-right', text: this.$t('closeLeft') },\r\n        { key: '2', icon: 'vertical-left', text: this.$t('closeRight') },\r\n        { key: '3', icon: 'close', text: this.$t('closeOthers') },\r\n        { key: '4', icon: 'sync', text: this.$t('refresh') },\r\n      ]\r\n    },\r\n    tabsOffset() {\r\n      return this.multiPage ? 24 : 0\r\n    }\r\n  },\r\n  created () {\r\n    this.loadCacheConfig(this.$router?.options?.routes)\r\n    this.loadCachedTabs()\r\n    const route = this.$route\r\n    if (this.pageList.findIndex(item => item.path === route.path) === -1) {\r\n      this.pageList.push(this.createPage(route))\r\n    }\r\n    this.activePage = route.path\r\n    if (this.multiPage) {\r\n      this.$nextTick(() => {\r\n        this.setCachedKey(route)\r\n      })\r\n      this.addListener()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.correctPageMinHeight(-this.tabsOffset)\r\n  },\r\n  beforeDestroy() {\r\n    this.removeListener()\r\n    this.correctPageMinHeight(this.tabsOffset)\r\n  },\r\n  watch: {\r\n    '$router.options.routes': function (val) {\r\n      this.excludeKeys = []\r\n      this.loadCacheConfig(val)\r\n    },\r\n    '$route': function (newRoute) {\r\n      this.activePage = newRoute.path\r\n      const page = this.pageList.find(item => item.path === newRoute.path)\r\n      if (!this.multiPage) {\r\n        this.pageList = [this.createPage(newRoute)]\r\n      } else if (page) {\r\n        page.fullPath = newRoute.fullPath\r\n      } else if (!page) {\r\n        this.pageList.push(this.createPage(newRoute))\r\n      }\r\n      if (this.multiPage) {\r\n        this.$nextTick(() => {\r\n          this.setCachedKey(newRoute)\r\n        })\r\n      }\r\n    },\r\n    'multiPage': function (newVal) {\r\n      if (!newVal) {\r\n        this.pageList = [this.createPage(this.$route)]\r\n        this.removeListener()\r\n      } else {\r\n        this.addListener()\r\n      }\r\n    },\r\n    tabsOffset(newVal, oldVal) {\r\n      this.correctPageMinHeight(oldVal - newVal)\r\n    }\r\n  },\r\n  methods: {\r\n    changePage (key) {\r\n      this.activePage = key\r\n      const page = this.pageList.find(item => item.path === key)\r\n      this.$router.push(page.fullPath)\r\n    },\r\n    remove (key, next) {\r\n      if (this.pageList.length === 1) {\r\n        return this.$message.warning(this.$t('warn'))\r\n      }\r\n      //清除缓存\r\n      let index = this.pageList.findIndex(item => item.path === key)\r\n      this.clearCaches = this.pageList.splice(index, 1).map(page => page.cachedKey)\r\n      if (next) {\r\n        this.$router.push(next)\r\n      } else if (key === this.activePage) {\r\n        index = index >= this.pageList.length ? this.pageList.length - 1 : index\r\n        this.activePage = this.pageList[index].path\r\n        this.$router.push(this.activePage)\r\n      }\r\n    },\r\n    refresh (key, page) {\r\n      page = page || this.pageList.find(item => item.path === key)\r\n      page.loading = true\r\n      this.clearCache(page)\r\n      if (key === this.activePage) {\r\n        this.reloadContent(() => page.loading = false)\r\n      } else {\r\n        // 其实刷新很快，加这个延迟纯粹为了 loading 状态多展示一会儿，让用户感知刷新这一过程\r\n        setTimeout(() => page.loading = false, 500)\r\n      }\r\n    },\r\n    onContextmenu(pageKey, e) {\r\n      if (pageKey) {\r\n        e.preventDefault()\r\n        e.meta = pageKey\r\n        this.menuVisible = true\r\n      }\r\n    },\r\n    onMenuSelect (key, target, pageKey) {\r\n      switch (key) {\r\n        case '1': this.closeLeft(pageKey); break\r\n        case '2': this.closeRight(pageKey); break\r\n        case '3': this.closeOthers(pageKey); break\r\n        case '4': this.refresh(pageKey); break\r\n        default: break\r\n      }\r\n    },\r\n    closeOthers (pageKey) {\r\n      // 清除缓存\r\n      const clearPages = this.pageList.filter(item => item.path !== pageKey && !item.unclose)\r\n      this.clearCaches = clearPages.map(item => item.cachedKey)\r\n      this.pageList = this.pageList.filter(item => !clearPages.includes(item))\r\n      // 判断跳转\r\n      if (this.activePage != pageKey) {\r\n        this.activePage = pageKey\r\n        this.$router.push(this.activePage)\r\n      }\r\n    },\r\n    closeLeft (pageKey) {\r\n      const index = this.pageList.findIndex(item => item.path === pageKey)\r\n      // 清除缓存\r\n      const clearPages = this.pageList.filter((item, i) => i < index && !item.unclose)\r\n      this.clearCaches = clearPages.map(item => item.cachedKey)\r\n      this.pageList = this.pageList.filter(item => !clearPages.includes(item))\r\n      // 判断跳转\r\n      if (!this.pageList.find(item => item.path === this.activePage)) {\r\n        this.activePage = pageKey\r\n        this.$router.push(this.activePage)\r\n      }\r\n    },\r\n    closeRight (pageKey) {\r\n      // 清除缓存\r\n      const index = this.pageList.findIndex(item => item.path === pageKey)\r\n      const clearPages = this.pageList.filter((item, i) => i > index && !item.unclose)\r\n      this.clearCaches = clearPages.map(item => item.cachedKey)\r\n      this.pageList = this.pageList.filter(item => !clearPages.includes(item))\r\n      // 判断跳转\r\n      if (!this.pageList.find(item => item.path === this.activePage)) {\r\n        this.activePage = pageKey\r\n        this.$router.push(this.activePage)\r\n      }\r\n    },\r\n    clearCache(page) {\r\n      page._init_ = false\r\n      this.clearCaches = [page.cachedKey]\r\n    },\r\n    reloadContent(onLoaded) {\r\n      this.refreshing = true\r\n      setTimeout(() => {\r\n        this.refreshing = false\r\n        this.$nextTick(() => {\r\n          this.setCachedKey(this.$route)\r\n          if (typeof onLoaded === 'function') {\r\n            onLoaded.apply(this, [])\r\n          }\r\n        })\r\n      }, 200)\r\n    },\r\n    pageName(page) {\r\n      return this.$t(getI18nKey(page.keyPath))\r\n    },\r\n    /**\r\n     * 添加监听器\r\n     */\r\n    addListener() {\r\n      window.addEventListener('page:close', this.closePageListener)\r\n      window.addEventListener('page:refresh', this.refreshPageListener)\r\n      window.addEventListener('unload', this.unloadListener)\r\n    },\r\n    /**\r\n     * 移出监听器\r\n     */\r\n    removeListener() {\r\n      window.removeEventListener('page:close', this.closePageListener)\r\n      window.removeEventListener('page:refresh', this.refreshPageListener)\r\n      window.removeEventListener('unload', this.unloadListener)\r\n    },\r\n    /**\r\n     * 页签关闭事件监听\r\n     * @param event 页签关闭事件\r\n     */\r\n    closePageListener(event) {\r\n      const {closeRoute, nextRoute} = event.detail\r\n      const closePath = typeof closeRoute === 'string' ? closeRoute : closeRoute.path\r\n      const path = closePath && closePath.split('?')[0]\r\n      this.remove(path, nextRoute)\r\n    },\r\n    /**\r\n     * 页面刷新事件监听\r\n     * @param event 页签关闭事件\r\n     */\r\n    refreshPageListener(event) {\r\n      const {pageKey} = event.detail\r\n      const path = pageKey && pageKey.split('?')[0]\r\n      this.refresh(path)\r\n    },\r\n    /**\r\n     * 页面 unload 事件监听器，添加页签到 session 缓存，用于刷新时保留页签\r\n     */\r\n    unloadListener() {\r\n      const tabs = this.pageList.map(item => ({...item, _init_: false}))\r\n      sessionStorage.setItem(process.env.VUE_APP_TBAS_KEY, JSON.stringify(tabs))\r\n    },\r\n    createPage(route) {\r\n      return {\r\n        keyPath: route.matched[route.matched.length - 1].path,\r\n        fullPath: route.fullPath, loading: false,\r\n        path: route.path,\r\n        title: route.meta && route.meta.page && route.meta.page.title,\r\n        unclose: route.meta && route.meta.page && (route.meta.page.closable === false),\r\n      }\r\n    },\r\n    /**\r\n     * 设置页面缓存的key\r\n     * @param route 页面对应的路由\r\n     */\r\n    setCachedKey(route) {\r\n      const page = this.pageList.find(item => item.path === route.path)\r\n      page.unclose = route.meta && route.meta.page && (route.meta.page.closable === false)\r\n      if (!page._init_) {\r\n        const vnode = this.$refs.tabContent.$vnode\r\n        page.cachedKey = vnode.key + vnode.componentOptions.Ctor.cid\r\n        page._init_ = true\r\n      }\r\n    },\r\n    /**\r\n     * 加载缓存的 tabs\r\n     */\r\n    loadCachedTabs() {\r\n      const cachedTabsStr = sessionStorage.getItem(process.env.VUE_APP_TBAS_KEY)\r\n      if (cachedTabsStr) {\r\n        try {\r\n          const cachedTabs = JSON.parse(cachedTabsStr)\r\n          if (cachedTabs.length > 0) {\r\n            this.pageList = cachedTabs\r\n          }\r\n        } catch (e) {\r\n          console.warn('failed to load cached tabs, got exception:', e)\r\n        } finally {\r\n          sessionStorage.removeItem(process.env.VUE_APP_TBAS_KEY)\r\n        }\r\n      }\r\n    },\r\n    loadCacheConfig(routes, pCache = true) {\r\n      routes.forEach(item => {\r\n        const cacheAble = item.meta?.page?.cacheAble ?? pCache ?? true\r\n        if (!cacheAble) {\r\n          this.excludeKeys.push(new RegExp(`${item.path}\\\\d+$`))\r\n        }\r\n        if (item.children) {\r\n          this.loadCacheConfig(item.children, cacheAble)\r\n        }\r\n      })\r\n    },\r\n    ...mapMutations('setting', ['correctPageMinHeight'])\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .tabs-view{\r\n    margin: -16px auto 8px;\r\n    &.head.fixed{\r\n      max-width: 1400px;\r\n    }\r\n  }\r\n  .tabs-view-content{\r\n    position: relative;\r\n    &.head.fixed{\r\n      width: 1400px;\r\n      margin: 0 auto;\r\n    }\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/layouts/tabs"}]}