{"remainingRequest":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project\\spiderPlatform\\spider_platform\\src\\pages\\proj_manage\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project\\spiderPlatform\\spider_platform\\src\\pages\\proj_manage\\index.vue","mtime":1653117213591},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646988157970},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\babel-loader\\lib\\index.js","mtime":1646988157969},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646988157970},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\index.js","mtime":1646988174758}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiefile":"index.vue","sourceRoot":"src/pages/proj_manage","sourcesContent":["<template>\r\n  <div class=\"new-page\" :style=\"`min-height: ${pageMinHeight}px`\">\r\n    <el-tabs class=\"project_tab\" v-model=\"activeName\" @tab-click=\"spider_handleClick\">\r\n      <el-tab-pane label=\"项目管理\" name=\"first\">\r\n        <div class=\"tab-title\">\r\n          <el-button @click=\"isCreateProjectBtnVisible = true\">+ 创建项目</el-button>\r\n          <el-button @click=\"downloadNewsDataVisible=true\"> 导出舆情数据</el-button>\r\n          <el-dialog\r\n              title=\"提示\"\r\n              :visible.sync=\"downloadNewsDataVisible\"\r\n              width=\"30%\"\r\n              center>\r\n            <p style=\"text-align: center\">请选择需要导出的<b>爬虫项目</b></p>\r\n            <el-select style=\"margin-left: 25%;width: 50%\" v-model=\"downloadNewsDataSelect\" placeholder=\"请选择\">\r\n              <el-option\r\n                  v-for=\"item in allProject\"\r\n                  :key=\"item.name\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.name\">\r\n              </el-option>\r\n            </el-select>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"downloadNewsDataVisible = false\">取 消</el-button>\r\n            <el-button v-loading=\"downloadNewsDataLoading\"\r\n                       @click=\"downloadNewsData\">确 定</el-button>\r\n          </span>\r\n          </el-dialog>\r\n          <el-button @click=\"downloadUserDataVisible=true\" style=\"margin-left: 10px\"> 导出用户数据</el-button>\r\n          <el-dialog\r\n              title=\"提示\"\r\n              :visible.sync=\"downloadUserDataVisible\"\r\n              width=\"30%\"\r\n              center>\r\n            <span>此操作将导出当前所有<b>用户数据</b>，是否继续？</span>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"downloadUserDataVisible = false\">取 消</el-button>\r\n            <el-button v-loading=\"downloadUserDataLoading\" type=\"primary\" @click=\"downloadUserData\">确 定</el-button>\r\n          </span>\r\n          </el-dialog>\r\n        </div>\r\n        <el-card class=\"box-card\">\r\n          <el-table :data=\"allProject\" style=\"width: 100%\">\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"项目名称\" min-width=\"100\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.name }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"创建日期\" min-width=\"100\">\r\n              <template slot-scope=\"scope\">\r\n                <i class=\"el-icon-time\"></i>\r\n                <span style=\"margin-left: 10px\">{{ scope.row.create_time }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" min-width=\"300\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"primary\" @click=\"manageContentSpider(scope.$index, scope.row)\"\r\n                           plain>管理内容爬虫\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"primary\" @click=\"manageHotSpider(scope.$index, scope.row)\"\r\n                           plain>管理热点爬虫\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"primary\" @click=\"manageDistEquip(scope.$index, scope.row)\"\r\n                           plain>管理分布式设备\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"primary\" @click=\"managePlatAccount(scope.$index, scope.row)\"\r\n                           plain>管理平台账户\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"danger\" @click=\"delProject(scope.$index, scope.row)\"\r\n                           plain>删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n        <el-dialog title=\"提示\" :visible.sync=\"isCreateProjectBtnVisible\" width=\"30%\">\r\n          <span>请输入项目名称：</span>\r\n          <el-input placeholder=\"项目名称\" v-model=\"nameForProject\" clearable></el-input>\r\n          <span>请输入作者名称：</span>\r\n          <el-input placeholder=\"项目作者\" v-model=\"authorForProject\" clearable></el-input>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"isCreateProjectBtnVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"createNewProj\">确 定</el-button>\r\n          </span>\r\n        </el-dialog>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"爬虫管理\" name=\"second\" :disabled=\"true\">\r\n        <div class=\"tab-title\">\r\n          <el-button size=\"medium\" @click=\"getContentSpider\"> + 新建爬虫</el-button>\r\n        </div>\r\n        <el-card class=\"box-card\">\r\n          <el-table\r\n              :data=\"spider_tableData\"\r\n              style=\"width: 100%\">\r\n            <el-table-column label=\"起始日期\" sortable width=\"180\">\r\n              <template slot-scope=\"scope\">\r\n                <i class=\"el-icon-time\"></i>\r\n                <span style=\"margin-left: 10px\">{{ scope.row.date }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"name\" label=\"爬虫名称\" min-width=\"180\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"device\" label=\"所属设备\" min-width=\"180\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"status\" label=\"状态\" min-width=\"180\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"tag\" label=\"标签\" min-width=\"100\"\r\n                             :filters=\"[{ text: '已启用', value: '已启用' }, { text: '已停用', value: '已停用' }]\"\r\n                             :filter-method=\"spider_filterTag\" filter-placement=\"bottom-end\">\r\n              <template slot-scope=\"scope\">\r\n                <el-tag :type=\"scope.row.tag === '已启用' ? 'success' : 'danger'\" disable-transitions>{{ scope.row.tag }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" min-width=\"180\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" @click=\"spider_edit(scope.$index, scope.row)\">编辑\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"danger\" @click=\"spider_handleDelete(scope.$index, scope.row)\">删除\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"success\" @click=\"monitorSpider(scope.$index, scope.row)\">监控爬虫状态\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n        <div style=\"height:35px;width:100%\" class=\"clspage\">\r\n          <el-pagination align='center' @current-change=\"spider_handle_user_CurrentChange\" layout=\"prev, pager, next\"\r\n                         :page-size=\"spider_pageSize\" :current-page=\"spider_currentPage\"\r\n                         :total=\"spider_total\"></el-pagination>\r\n        </div>\r\n        <div class=\"dialog\">\r\n          <el-dialog\r\n              title=\"新建爬虫\"\r\n              :visible.sync=\"spider_createDialogVisible\"\r\n              width=\"40%\"\r\n              center>\r\n            <el-select style=\"margin-left: 35%\" v-model=\"addSpider\" multiple placeholder=\"请选择需要新建的爬虫\">\r\n              <el-option\r\n                  v-for=\"item in addSpiderList\"\r\n                  :key=\"item\"\r\n                  :label=\"item\"\r\n                  :value=\"item\">\r\n              </el-option>\r\n            </el-select>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"spider_createDialogVisible = false\">取 消</el-button>\r\n    <el-button type=\"primary\" @click=\"createSpider\">确 定 添 加</el-button>\r\n  </span>\r\n          </el-dialog>\r\n          <el-dialog\r\n              title=\"编辑爬虫\"\r\n              :visible.sync=\"spider_editDialogVisible\"\r\n              width=\"40%\"\r\n              center>\r\n            <div style=\"text-align: center\">\r\n              <span style=\"margin-right:30px \">是否启用爬虫</span>\r\n              <el-switch\r\n                  v-model=\"spider_is_start\"\r\n                  active-color=\"#13ce66\"\r\n                  inactive-color=\"#ff4949\">\r\n              </el-switch>\r\n            </div>\r\n\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button type=\"primary\" @click=\"editSpider\">确 定</el-button>\r\n  </span>\r\n          </el-dialog>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"热点爬虫\" name=\"third\" :disabled=\"true\">\r\n        <div class=\"tab-title\">\r\n          <el-button @click=\"isAddKeywordBtnVisible = true\">+ 添加关键词</el-button>\r\n          <el-button @click=\"isAddHotSpiderBtnVisible = true\">+ 添加热点爬虫</el-button>\r\n        </div>\r\n        <el-card class=\"box-card\">\r\n          <el-table :data=\"allKeywordsForProject\" style=\"width: 100%\">\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"关键词\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.keyword }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"标题\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.title }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"danger\"\r\n                           @click=\"deleteKeywordForProject(scope.$index, scope.row)\" plain>删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n        <el-card class=\"box-card\">\r\n          <el-table :data=\"projectHotSpiders\" style=\"width: 100%\">\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"平台\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.platform }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"状态\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\" v-if=\"scope.row.status\">已启用</span>\r\n                <span style=\"margin-left: 10px\" v-if=\"!scope.row.status\">未启用</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"danger\"\r\n                           @click=\"removeHotSpider(scope.row.platform)\" plain>取消\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n        <el-dialog title=\"提示\" :visible.sync=\"isAddHotSpiderBtnVisible\" width=\"30%\">\r\n          <el-select v-model=\"newHotSpiderForProject\" placeholder=\"请选择\">\r\n            <el-option\r\n                v-for=\"hotSpider in allHotSpiders\"\r\n                :key=\"hotSpider\"\r\n                :label=\"hotSpider\"\r\n                :value=\"hotSpider\">\r\n            </el-option>\r\n          </el-select>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"isAddHotSpiderBtnVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"addHotSpider\">确 定</el-button>\r\n          </span>\r\n        </el-dialog>\r\n        <el-dialog title=\"提示\" :visible.sync=\"isAddKeywordBtnVisible\" width=\"30%\" :before-close=\"handleClose\">\r\n          <el-input placeholder=\"请输入标题\" v-model=\"newTitleForProject\" style=\"margin-bottom: 16px\" clearable>\r\n          </el-input>\r\n          <el-input type=\"textarea\" :rows=\"4\" placeholder=\"请输入关键词，以换行符为分隔\" v-model=\"newKeywordForProject\"></el-input>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"isAddKeywordBtnVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"addHotSpiderKeyword\">确 定</el-button>\r\n          </span>\r\n        </el-dialog>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"定时任务\" name=\"forth\">\r\n        <!--        <div class=\"tab-title\">-->\r\n        <!--          <el-button @click=\"isAddTimedTaskBtnVisible = true\">+ 添加定时任务</el-button>-->\r\n        <!--        </div>-->\r\n        <el-card class=\"box-card\">\r\n          <el-table :data=\"allScheduleTask\" style=\"width: 100%\">\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"名称\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.name }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"类型\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.trigger }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"任务\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.task }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"状态\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\" v-if=\"scope.row.status === 1\">运行中</span>\r\n                <span style=\"margin-left: 10px\" v-if=\"scope.row.status === 0\">已暂停</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"success\" @click=\"showUpdateTimingTaskDialog(scope.row)\" plain>修改\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"danger\" v-if=\"scope.row.status === 1\"\r\n                           @click=\"pauseTimedTask(scope.row.name)\" plain>暂停\r\n                </el-button>\r\n                <el-button size=\"mini\" type=\"success\" v-if=\"scope.row.status === 0\"\r\n                           @click=\"resumeTimedTask(scope.row.name)\" plain>启用\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n        <el-dialog title=\"提示\" :visible.sync=\"isAddTimedTaskBtnVisible\" width=\"30%\">\r\n          <div class=\"demo-input-suffix\" v-if=\"timingTask.trigger === 'interval'\">\r\n            <div class=\"sub-title\">名称</div>\r\n            <el-input placeholder=\"请输入名称\" v-model=\"timingTask.name\" clearable></el-input>\r\n            <div class=\"sub-title\">天数</div>\r\n            <el-input placeholder=\"请输入天数\" v-model=\"timingTask.kwargs.day\" type=\"number\" clearable></el-input>\r\n            <div class=\"sub-title\">时数</div>\r\n            <el-input placeholder=\"请输入时数\" v-model=\"timingTask.kwargs.hour\" type=\"number\" clearable></el-input>\r\n            <div class=\"sub-title\">分数</div>\r\n            <el-input placeholder=\"请输入分数\" v-model=\"timingTask.kwargs.minute\" type=\"number\" clearable></el-input>\r\n            <div class=\"sub-title\">秒数</div>\r\n            <el-input placeholder=\"请输入秒数\" v-model=\"timingTask.kwargs.second\" type=\"number\" clearable></el-input>\r\n          </div>\r\n          <div class=\"demo-input-suffix block\" v-if=\"timingTask.trigger === 'date'\">\r\n            <div class=\"sub-title\">名称</div>\r\n            <el-input placeholder=\"请输入名称\" v-model=\"timingTask.name\" clearable>\r\n            </el-input>\r\n            <div class=\"sub-title\">日期</div>\r\n            <el-date-picker v-model=\"timingTask.kwargs\" type=\"datetime\" placeholder=\"选择日期时间\"></el-date-picker>\r\n          </div>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"isAddTimedTaskBtnVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"updateTimingTask\">确 定</el-button>\r\n          </span>\r\n        </el-dialog>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"分布式设备\" name=\"fifth\" :disabled=\"true\">\r\n        <div class=\"tab-title\">\r\n          <el-button @click=\"isAddDistEquipBtnVisible = true\">+ 添加分布式设备</el-button>\r\n        </div>\r\n        <el-card class=\"box-card\">\r\n          <el-table :data=\"distEquipsFroPoj.distEquips\" style=\"width: 100%\">\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"IP地址\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.ip }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"端口号\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.port }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"用户名\">\r\n              <template slot-scope=\"scope\">\r\n                <i class=\"el-icon-time\"></i>\r\n                <span style=\"margin-left: 10px\">{{ scope.row.username }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"设备地址\">\r\n              <template slot-scope=\"scope\">\r\n                <i class=\"el-icon-time\"></i>\r\n                <span style=\"margin-left: 10px\">{{ scope.row.address }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"danger\"\r\n                           @click=\"removeProjectDevice(scope.row.ip, scope.row.port)\" plain>删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n        <el-dialog title=\"提示\" :visible.sync=\"isAddDistEquipBtnVisible\" width=\"30%\">\r\n          <el-select v-model=\"newDistEquipIp\" placeholder=\"请选择\">\r\n            <el-option\r\n                v-for=\"distEquip in allDistEquip\"\r\n                :key=\"distEquip.ip\"\r\n                :label=\"distEquip.ip + ':' + distEquip.port\"\r\n                :value=\"distEquip.ip + ':' + distEquip.port\">\r\n            </el-option>\r\n          </el-select>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"isAddDistEquipBtnVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"addProjectDevice()\">确 定</el-button>\r\n          </span>\r\n        </el-dialog>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"平台账户\" name=\"sixth\" :disabled=\"true\">\r\n        <div class=\"tab-title\">\r\n          <el-button @click=\"isAddPlatformAccountsBtnVisible = true\">+ 添加平台账户</el-button>\r\n        </div>\r\n        <el-card class=\"box-card\">\r\n          <el-table :data=\"projectAccounts\" style=\"width: 100%\">\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"名称\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.user }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"平台\">\r\n              <template slot-scope=\"scope\">\r\n                <span style=\"margin-left: 10px\">{{ scope.row.platform }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"添加日期\">\r\n              <template slot-scope=\"scope\">\r\n                <i class=\"el-icon-time\"></i>\r\n                <span style=\"margin-left: 10px\">{{ scope.row.date }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"danger\"\r\n                           @click=\"deleteProjectAccount(scope.row)\"\r\n                           plain>删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n        <el-dialog title=\"提示\" :visible.sync=\"isAddPlatformAccountsBtnVisible\" width=\"30%\">\r\n          <el-select v-model=\"newProjectAccount\" placeholder=\"请选择\">\r\n            <el-option\r\n                v-for=\"item in allAccounts\"\r\n                :key=\"item.user\"\r\n                :label=\"item.user\"\r\n                :value=\"item.user\">\r\n            </el-option>\r\n          </el-select>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"isAddPlatformAccountsBtnVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"addProjectAccount\">确 定</el-button>\r\n          </span>\r\n        </el-dialog>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"爬虫状态\" name=\"seventh\" :disabled=\"true\">\r\n        <el-card class=\"box-card\">\r\n          <el-row>\r\n            <el-col :span=\"8\">\r\n              <div class=\"grid-content bg-purple\">\r\n                <el-card class=\"box-card2\">\r\n                  <h2>开始时间</h2>\r\n                  <h3>{{ spiderStatus.startTime }}</h3>\r\n                </el-card>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n              <div class=\"grid-content bg-purple-light\">\r\n                <el-card class=\"box-card2\">\r\n                  <h2>停止时间</h2>\r\n                  <h3>{{ spiderStatus.endTime }}</h3>\r\n                </el-card>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n              <div class=\"grid-content bg-purple\">\r\n                <el-card class=\"box-card2\">\r\n                  <h2>终止原因</h2>\r\n                  <h3>{{ spiderStatus.closedReason }}</h3>\r\n                </el-card>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row>\r\n            <el-col :span=\"12\">\r\n              <div class=\"grid-content bg-purple\">\r\n                <el-card class=\"box-card2\">\r\n                  <div id=\"dataVolume\" style=\"width: 707px; height: 300px\"></div>\r\n                </el-card>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n              <div class=\"grid-content bg-purple-light\">\r\n                <el-card class=\"box-card2\">\r\n                  <div id=\"reqRespVolume\" style=\"width: 707px; height: 300px\"></div>\r\n                </el-card>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row>\r\n            <el-col :span=\"12\">\r\n              <div class=\"grid-content bg-purple\">\r\n                <el-card class=\"box-card2\">\r\n                  <div id=\"queueVolume\" style=\"width: 707px; height: 300px\"></div>\r\n                </el-card>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n              <div class=\"grid-content bg-purple-light\">\r\n                <el-card class=\"box-card2\">\r\n                  <div id=\"statusRespVolume\" style=\"width: 707px; height: 300px\"></div>\r\n                </el-card>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n        </el-card>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n<style lang=\"less\" src=\"./index.less\"></style>\r\n\r\n<script>\r\nimport {mapState} from 'vuex';\r\nimport {METHOD, request} from '@/utils/request';\r\nimport {\r\n  ADD_HOT_SPIDER,\r\n  ADD_KEYWORD,\r\n  CONTENT_SPIDER,\r\n  GET_ACCOUNT_INFO,\r\n  GET_ALL_CONTENT_SPIDER,\r\n  GET_CUSTOM_KEYWORDS,\r\n  GET_DEVICE_INFO,\r\n  GET_HOT_SPIDER,\r\n  GET_PROJECTS_INFO,\r\n  PAUSE_TIMING,\r\n  RM_HOT_SPIDER,\r\n  SPIDER_DEL_ADD,\r\n  SPIDER_STATUS,\r\n  START_TIMING,\r\n  UPDATE_PRO_ACCOUNT,\r\n  UPDATE_PROJECT_DEVICE,\r\n  UPDATE_TIMING_JOB,\r\n  SPIDER_MONITOR,\r\n  CREATE_PROJ,\r\n  DEL_PROJ,\r\n  DOWNLOAD_USER,\r\n  DOWNLOAD_NEWS,\r\n} from '@/services/api';\r\nimport * as echarts from \"echarts\";\r\n\r\n\r\n// import axios from \"axios\";\r\n\r\nexport default {\r\n  name: 'proj_manage',\r\n  i18n: require('./i18n'),\r\n  data() {\r\n    return {\r\n      downloadNewsDataSelect: \"\",\r\n      downloadNewsDataLoading: false,\r\n      downloadUserDataLoading: false,\r\n      downloadUserDataVisible: false,\r\n      downloadNewsDataVisible: false,\r\n      nameForProject: '',\r\n      authorForProject: '',\r\n      addSpider: [],\r\n      addSpiderList: [],\r\n      nowProject: '',\r\n      edit_spider_index: null,\r\n      edit_spider_row: null,\r\n      spider_is_start: true,\r\n      activeName: 'first',\r\n      spider_pageSize: 7,\r\n      spider_currentPage: 1,\r\n      spider_total: 4,\r\n      spider_tableData: [],\r\n      spider_createDialogVisible: false,\r\n      spider_editDialogVisible: false,\r\n      allHotSpiders: [],\r\n      allKeywordsForProject: [],\r\n      newHotSpiderForProject: \"\",\r\n      projectHotSpiders: [],\r\n      isAddKeywordBtnVisible: false,\r\n      isAddHotSpiderBtnVisible: false,\r\n      newTitleForProject: \"\",\r\n      newKeywordForProject: \"\",\r\n\r\n      isAddTimedTaskBtnVisible: false,\r\n      isAddDistEquipBtnVisible: false,\r\n      isCreateProjectBtnVisible: false,\r\n      isAddPlatformAccountsBtnVisible: false,\r\n\r\n      allProject: [],\r\n      currentProject: null,\r\n\r\n      newDistEquipIp: \"\",\r\n      allDistEquip: [],\r\n      distEquipsFroPoj: {projectName: \"\", distEquips: []},\r\n\r\n      timingTask: {},\r\n      allScheduleTask: [],\r\n      projectAccounts: [],\r\n      allAccounts: [],\r\n\r\n      newProjectAccount: \"\",\r\n      spiderStatus: {\r\n        startTime: \"\",\r\n        endTime: \"\",\r\n        closedReason: \"\"\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    downloadNewsData() {\r\n      this.downloadNewsDataLoading = true\r\n      request(DOWNLOAD_NEWS, METHOD.POST,{\r\n        project_name: this.downloadNewsDataSelect\r\n      }).then(res => {\r\n        const data = res.data\r\n        // let url = window.URL.createObjectURL(data)\r\n        let binaryData = [];\r\n        binaryData.push(data);\r\n        let url = window.URL.createObjectURL(new Blob(binaryData));\r\n        var a = document.createElement('a')\r\n        document.body.appendChild(a)\r\n        a.href = url\r\n        a.download = 'news_rawdata.csv'\r\n        a.click()\r\n        window.URL.revokeObjectURL(url)\r\n        this.downloadNewsDataLoading = false\r\n        this.downloadNewsDataVisible = false\r\n      })\r\n    },\r\n    downloadUserData() {\r\n      this.downloadUserDataLoading = true\r\n      request(DOWNLOAD_USER, METHOD.GET).then(res => {\r\n        const data = res.data\r\n        // let url = window.URL.createObjectURL(data)\r\n        let binaryData = [];\r\n        binaryData.push(data);\r\n        let url = window.URL.createObjectURL(new Blob(binaryData));\r\n        var a = document.createElement('a')\r\n        document.body.appendChild(a)\r\n        a.href = url\r\n        a.download = 'users_rawdata.csv'\r\n        a.click()\r\n        window.URL.revokeObjectURL(url)\r\n        this.downloadUserDataLoading = false\r\n        this.downloadUserDataVisible = false\r\n      })\r\n    },\r\n    delProject(index, row) {\r\n      this.$confirm('此操作将删除该项目, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n        center: true\r\n      }).then(() => {\r\n        request(DEL_PROJ, METHOD.POST, {\r\n          project_name: row.name\r\n        }).then(res => {\r\n          if (res.data.code === 200) {\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除成功!'\r\n            });\r\n          } else {\r\n            this.$message({\r\n              type: 'warning',\r\n              message: '删除失败'\r\n            });\r\n          }\r\n          this.queryProjects()\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });\r\n      });\r\n    },\r\n    completeDate(value) {\r\n      return value < 10 ? \"0\" + value : value;\r\n    },\r\n    getNowFormatDay(nowDate) {\r\n      var char = \"-\";\r\n      if (nowDate == null) {\r\n        nowDate = new Date();\r\n      }\r\n      var day = nowDate.getDate();\r\n      var month = nowDate.getMonth() + 1;//注意月份需要+1\r\n      var year = nowDate.getFullYear();\r\n      //补全0，并拼接\r\n      return year + char + this.completeDate(month) + char + this.completeDate(day);\r\n    },\r\n    getNowFormatTime() {\r\n      var nowDate = new Date();\r\n      var colon = \":\";\r\n      var h = nowDate.getHours();\r\n      var m = nowDate.getMinutes();\r\n      var s = nowDate.getSeconds();\r\n      //补全0，并拼接\r\n      return this.getNowFormatDay(nowDate) + \" \" + this.completeDate(h) + colon + this.completeDate(m) + colon + this.completeDate(s);\r\n    },\r\n    getLastFormatDay(nowDate) {\r\n      var char = \"-\";\r\n      if (nowDate == null) {\r\n        nowDate = new Date();\r\n      }\r\n      var day = nowDate.getDate();\r\n      var month = nowDate.getMonth() + 1;//注意月份需要+1\r\n      var year = nowDate.getFullYear();\r\n      //补全0，并拼接\r\n      return year - 1 + char + this.completeDate(month) + char + this.completeDate(day);\r\n    },\r\n    getLastFormatTime() {\r\n      var nowDate = new Date();\r\n      var colon = \":\";\r\n      var h = nowDate.getHours();\r\n      var m = nowDate.getMinutes();\r\n      var s = nowDate.getSeconds();\r\n      //补全0，并拼接\r\n      return this.getLastFormatDay(nowDate) + \" \" + this.completeDate(h) + colon + this.completeDate(m) + colon + this.completeDate(s);\r\n    },\r\n    createNewProj() {\r\n      let that = this\r\n      request(CREATE_PROJ, METHOD.POST, {\r\n        param: {\r\n          \"author\": that.authorForProject,\r\n          \"create_time\": that.getNowFormatTime(),\r\n          \"name\": that.nameForProject,\r\n          \"spider_manager\": {\r\n            \"project_name\": that.nameForProject,\r\n            \"spiders\": {}\r\n          },\r\n          \"hot_spider_config\": {},\r\n          \"devices_manager\": {\r\n            \"127.0.0.1\": true\r\n          },\r\n          \"crawl_time\": {\r\n            \"start\": that.getLastFormatTime(),\r\n            \"end\": that.getNowFormatTime()\r\n          }\r\n        }\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          this.$message({\r\n            message: '创建项目成功',\r\n            type: 'success'\r\n          });\r\n          this.queryProjects()\r\n        } else {\r\n          this.$message({\r\n            message: '创建项目失败',\r\n            type: 'warning'\r\n          });\r\n        }\r\n      })\r\n\r\n      this.isCreateProjectBtnVisible = false\r\n    },\r\n    getContentSpider() {\r\n      this.spider_createDialogVisible = true\r\n      let that = this\r\n      that.addSpider = []\r\n      request(GET_ALL_CONTENT_SPIDER, METHOD.GET, {}).then(res => {\r\n        let nowSpider = []\r\n        for (let i in this.spider_tableData) {\r\n          nowSpider.push(this.spider_tableData[i]['name'])\r\n        }\r\n        let spiderOptions = res.data.content_spiders.filter(v => !nowSpider.includes(v))\r\n        that.addSpiderList = spiderOptions\r\n      })\r\n    },\r\n    getHotSpiders() {\r\n      const that = this;\r\n      request(GET_HOT_SPIDER, METHOD.GET).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.allHotSpiders = [];\r\n          that.allHotSpiders = res.data.hot_spiders;\r\n        }\r\n      });\r\n    },\r\n    getHotSpidersForProject(projectName) {\r\n      const that = this;\r\n      request(GET_PROJECTS_INFO, METHOD.POST, {\r\n        project_name: projectName\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          let allSpiders = res.data.message.hot_spider_config;\r\n          that.projectHotSpiders = [];\r\n          for (let key in allSpiders) {\r\n            that.projectHotSpiders.push({\"platform\": key, \"status\": allSpiders[key]});\r\n          }\r\n        }\r\n      });\r\n    },\r\n    getAllKeywordsForProject() {\r\n      const that = this;\r\n      let project_name = that.currentProject.name;\r\n      request(GET_CUSTOM_KEYWORDS, METHOD.POST, {\r\n        \"project_name\": project_name\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.allKeywordsForProject = [];\r\n          that.allKeywordsForProject = res.data.message;\r\n        }\r\n      });\r\n    },\r\n    addHotSpider() {\r\n      const that = this;\r\n      let projectName = that.currentProject.name;\r\n      request(ADD_HOT_SPIDER, METHOD.POST, {\r\n        \"project_name\": projectName,\r\n        \"add_spider\": [that.newHotSpiderForProject]\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.getHotSpidersForProject(that.currentProject.name);\r\n          that.isAddHotSpiderBtnVisible = false;\r\n        }\r\n      });\r\n    },\r\n    removeHotSpider(hotSpider) {\r\n      const that = this;\r\n      let projectName = that.currentProject.name;\r\n      request(RM_HOT_SPIDER, METHOD.POST, {\r\n        \"project_name\": projectName,\r\n        \"rm_spider\": [hotSpider]\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.getHotSpidersForProject(that.currentProject.name);\r\n          that.isAddHotSpiderBtnVisible = false;\r\n        }\r\n      });\r\n    },\r\n    addHotSpiderKeyword() {\r\n      const that = this;\r\n      let project_name = that.currentProject.name;\r\n      let newTitle = that.newTitleForProject;\r\n      let allKeywords = that.newKeywordForProject.split(\"\\n\");\r\n      request(ADD_KEYWORD, METHOD.POST, {\r\n        \"project_name\": project_name,\r\n        \"add_keywords\": {\"title\": newTitle, \"keywords\": allKeywords},\r\n        \"rm_keywords\": {}\r\n      }).then(function () {\r\n        that.getAllKeywordsForProject();\r\n        that.isAddKeywordBtnVisible = false;\r\n      });\r\n    },\r\n    deleteKeywordForProject(index, row) {\r\n      const that = this;\r\n      let project_name = that.currentProject.name;\r\n      let keyword = {};\r\n      keyword[\"title\"] = row.title;\r\n      keyword[\"keywords\"] = [row.keyword];\r\n      request(ADD_KEYWORD, METHOD.POST, {\r\n        \"project_name\": project_name,\r\n        \"add_keywords\": {},\r\n        \"rm_keywords\": keyword\r\n      }).then(function () {\r\n        that.getAllKeywordsForProject();\r\n        that.isAddKeywordBtnVisible = false;\r\n\r\n      });\r\n    },\r\n    queryProjects() {\r\n      const that = this;\r\n      request(GET_PROJECTS_INFO, METHOD.POST, {\r\n        project_name: \"\"\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.allProject = res.data.message.projects;\r\n          console.log(that.allProject)\r\n        }\r\n      });\r\n    },\r\n    manageContentSpider(index, row) {\r\n      const that = this;\r\n      that.activeName = \"second\";\r\n      this.getAllContentSpider(row.name)\r\n      this.nowProject = row.name\r\n    },\r\n    async getAllContentSpider(projectName) {\r\n      await request(CONTENT_SPIDER, METHOD.POST, {\r\n        project_name: projectName,\r\n      }).then(res => {\r\n        let newData = []\r\n        for (let device in res.data.content) {\r\n          for (let spider in res.data.content[device]) {\r\n            newData.push({\r\n              date: res.data.content[device][spider]['start_time'],\r\n              name: spider,\r\n              n_name: spider,\r\n              tag: res.data.content[device][spider]['label'] === true ? '已启用' : '已禁用',\r\n              device: device,\r\n              status: res.data.content[device][spider]['status']\r\n            })\r\n          }\r\n        }\r\n        this.spider_tableData = newData\r\n      })\r\n\r\n    },\r\n    manageHotSpider(index) {\r\n      const that = this;\r\n      that.activeName = \"third\";\r\n      that.currentProject = that.allProject[index];\r\n      let allSpiders = that.currentProject.hot_spider_config;\r\n      that.projectHotSpiders = [];\r\n      for (let key in allSpiders) {\r\n        that.projectHotSpiders.push({\"platform\": key, \"status\": allSpiders[key]});\r\n      }\r\n      that.getHotSpiders();\r\n      that.getAllKeywordsForProject();\r\n    },\r\n    manageDistEquip(index) {\r\n      const that = this;\r\n      that.activeName = \"fifth\";\r\n      that.currentProject = that.allProject[index];\r\n      request(GET_DEVICE_INFO, METHOD.POST, {\r\n        project_name: that.currentProject.name\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.distEquipsFroPoj.distEquips = [];\r\n          for (let key in res.data.message) {\r\n            that.distEquipsFroPoj.distEquips.push(res.data.message[key]);\r\n          }\r\n        }\r\n      });\r\n      request(GET_DEVICE_INFO, METHOD.POST, {\r\n        project_name: \"\"\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          let distEquips = res.data.message;\r\n          that.allDistEquip = [];\r\n          for (let key in distEquips) {\r\n            that.allDistEquip.push(distEquips[key]);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    managePlatAccount(index) {\r\n      const that = this;\r\n      that.activeName = \"sixth\";\r\n      that.currentProject = that.allProject[index];\r\n      that.queryProjectAccount();\r\n    },\r\n    reloadProjectDevice() {\r\n      const that = this;\r\n      request(GET_DEVICE_INFO, METHOD.POST, {\r\n        project_name: that.currentProject.name\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.distEquipsFroPoj.distEquips = [];\r\n          for (let key in res.data.message) {\r\n            that.distEquipsFroPoj.distEquips.push(res.data.message[key]);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    addProjectDevice() {\r\n      const that = this;\r\n      request(UPDATE_PROJECT_DEVICE, METHOD.POST, {\r\n        \"project_name\": that.currentProject.name,\r\n        \"add_ip\": [that.newDistEquipIp],\r\n        \"rm_ip\": []\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.reloadProjectDevice();\r\n          that.isAddDistEquipBtnVisible = false;\r\n        }\r\n      });\r\n    },\r\n    removeProjectDevice(distEquipIpToRemove, distEquipPortToRemove) {\r\n      const that = this;\r\n      let ip2port = distEquipIpToRemove + \":\" + distEquipPortToRemove;\r\n      request(UPDATE_PROJECT_DEVICE, METHOD.POST, {\r\n        \"project_name\": that.currentProject.name,\r\n        \"add_ip\": [],\r\n        \"rm_ip\": [ip2port]\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          that.reloadProjectDevice();\r\n        }\r\n      });\r\n    },\r\n    updateTimingTask() {\r\n      const that = this;\r\n      let a_name = that.timingTask.name;\r\n\r\n      let a_obj = {};\r\n      a_obj[\"timing_job\"] = {};\r\n      if (that.timingTask.trigger === \"interval\") {\r\n        that.timingTask.kwargs.day = Number(that.timingTask.kwargs.day);\r\n        that.timingTask.kwargs.hour = Number(that.timingTask.kwargs.hour);\r\n        that.timingTask.kwargs.minute = Number(that.timingTask.kwargs.minute);\r\n        that.timingTask.kwargs.second = Number(that.timingTask.kwargs.second);\r\n      }\r\n\r\n      a_obj[\"timing_job\"][a_name] = that.timingTask;\r\n\r\n      request(UPDATE_TIMING_JOB, METHOD.POST, a_obj).then(function () {\r\n        that.queryAllScheduleTask();\r\n        that.isAddTimedTaskBtnVisible = false;\r\n      });\r\n    },\r\n    spider_filterTag(value, row) {\r\n      return row.tag === value;\r\n    },\r\n    spider_handleClick(tab) {\r\n      const that = this;\r\n      if (tab.index === \"3\") {\r\n        that.queryAllScheduleTask();\r\n      } else if (tab.index === \"5\") {\r\n        that.queryProjectAccount();\r\n      } else if (tab.index === \"2\") {\r\n        that.getHotSpiders();\r\n        that.activeName = \"third\";\r\n      }\r\n    },\r\n    queryAllScheduleTask() {\r\n      const that = this;\r\n      request(GET_PROJECTS_INFO, METHOD.POST, {\r\n        project_name: \"\"\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          let jobManager = res.data.message.job_manager;\r\n          that.allScheduleTask = []\r\n          for (let key in jobManager) {\r\n            that.allScheduleTask.push(jobManager[key]);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    spider_handleDelete(index, row) {\r\n      const that = this;\r\n      this.$confirm('此操作将删除该爬虫, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n        center: true\r\n      }).then(() => {\r\n        request(SPIDER_DEL_ADD, METHOD.POST, {\r\n          \"project_name\": that.nowProject,\r\n          \"add_spiders\": [],\r\n          \"rm_spiders\": row.n_name\r\n        }).then(res => {\r\n          if (res.data.code == 300) {\r\n            this.$message({\r\n              message: '不存在该爬虫项目',\r\n              type: 'warning'\r\n            });\r\n          } else {\r\n            this.$message({\r\n              message: '删除爬虫成功',\r\n              type: 'success'\r\n            });\r\n            this.spider_tableData.splice(index, 1)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });\r\n      });\r\n    },\r\n    spider_handle_user_CurrentChange(val) {\r\n      this.currentPage = val;\r\n    },\r\n    createSpider() {\r\n      //在这里请求服务器获取到可以添加的爬虫，并且对比此项目已有的爬虫更新options\r\n      //请求服务器新建爬虫\r\n      if (this.addSpider.length == 0) {\r\n        this.$message({\r\n          message: '未选择爬虫',\r\n          type: 'warning'\r\n        });\r\n      } else {\r\n        request(SPIDER_DEL_ADD, METHOD.POST, {\r\n          \"project_name\": this.nowProject,\r\n          \"add_spiders\": this.addSpider,\r\n          \"rm_spiders\": \"\"\r\n        }).then(res => {\r\n          if (res.data.code == 300) {\r\n            this.$message({\r\n              message: '不存在该爬虫项目',\r\n              type: 'warning'\r\n            });\r\n          } else {\r\n            this.$message({\r\n              message: '添加成功',\r\n              type: 'success'\r\n            });\r\n            this.getAllContentSpider(this.nowProject)\r\n          }\r\n        })\r\n      }\r\n      this.spider_createDialogVisible = false\r\n    },\r\n    spider_edit(index, row) {\r\n      this.spider_editDialogVisible = true\r\n      this.spider_is_start = row.tag == '已启用' ? true : false\r\n      this.edit_spider_index = index\r\n      this.edit_spider_row = row\r\n      // 根据原始数据更新按钮\r\n    },\r\n    editSpider() {\r\n      let status = this.edit_spider_row.tag == '已启用' ? false : true\r\n      let name = this.edit_spider_row.n_name\r\n      let spider_status = {}\r\n      spider_status[name] = status\r\n      request(SPIDER_STATUS, METHOD.POST, {\r\n        project_name: this.nowProject,\r\n        spider_status: spider_status\r\n      }).then(res => {\r\n        if (res.data.code == 300) {\r\n          this.$message({\r\n            message: '不存在该爬虫项目',\r\n            type: 'warning'\r\n          });\r\n        } else {\r\n          this.$message({\r\n            message: '编辑爬虫成功',\r\n            type: 'success'\r\n          });\r\n          this.spider_tableData[this.edit_spider_index].tag = this.spider_is_start ? \"已启用\" : \"已停用\"\r\n        }\r\n      })\r\n      this.spider_editDialogVisible = false\r\n    },\r\n    monitorSpider(index, row) {\r\n      console.log(index, row);\r\n      const that = this;\r\n      that.activeName = \"seventh\";\r\n      request(SPIDER_MONITOR, METHOD.POST, {\r\n        \"project_name\": that.nowProject,\r\n        \"platform\": row.n_name\r\n      }).then(function (e) {\r\n        if (e.data.code === 200)\r\n          that.parseSpiderStatus(e.data.data);\r\n      });\r\n    },\r\n    parseSpiderStatus(originData) {\r\n      this.spiderStatus.startTime = originData.start_time;\r\n      this.spiderStatus.endTime = originData.end_time;\r\n      this.spiderStatus.closedReason = originData.closed_reason;\r\n\r\n      let dataVolumeChartDom = document.getElementById('dataVolume');\r\n      let dataVolumeChart = echarts.init(dataVolumeChartDom);\r\n      let dataVolumeChartOption = {\r\n        title: {\r\n          text: \"数据量\"\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['数据量']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: originData.x\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          name: '数据量',\r\n          type: 'line',\r\n          stack: 'Total',\r\n          data: originData[\"数据量\"],\r\n          smooth: true\r\n        }]\r\n      };\r\n      dataVolumeChartOption && dataVolumeChart.setOption(dataVolumeChartOption);\r\n\r\n      let reqRespVolumeChartDom = document.getElementById('reqRespVolume');\r\n      let reqRespVolumeChart = echarts.init(reqRespVolumeChartDom);\r\n      let reqRespVolumeChartOption = {\r\n        title: {\r\n          text: \"请求和响应量\"\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['请求量', '响应量']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: originData.x\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '请求量',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: originData[\"请求量\"],\r\n            smooth: true\r\n          },\r\n          {\r\n            name: '响应量',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: originData[\"响应量\"],\r\n            smooth: true\r\n          }\r\n        ]\r\n      };\r\n      reqRespVolumeChartOption && reqRespVolumeChart.setOption(reqRespVolumeChartOption);\r\n\r\n      let queueVolumeChartDom = document.getElementById('queueVolume');\r\n      let queueVolumeChart = echarts.init(queueVolumeChartDom);\r\n      let queueVolumeChartOption = {\r\n        title: {\r\n          text: \"队列量\"\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['待请求数量', '已抓取数量']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: originData.x\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '待请求数量',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: originData[\"待请求数量\"],\r\n            smooth: true\r\n          },\r\n          {\r\n            name: '已抓取数量',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: originData[\"已抓取数量\"],\r\n            smooth: true\r\n          }\r\n        ]\r\n      };\r\n      queueVolumeChartOption && queueVolumeChart.setOption(queueVolumeChartOption);\r\n\r\n      let statusRespVolumeChartDom = document.getElementById('statusRespVolume');\r\n      let statusRespVolumeChart = echarts.init(statusRespVolumeChartDom);\r\n      let statusRespVolumeChartOption = {\r\n        title: {\r\n          text: \"状态码响应数\"\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['200', '301', '404']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: originData.x\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '200',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: originData[\"200\"],\r\n            smooth: true\r\n          },\r\n          {\r\n            name: '301',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: originData[\"301\"],\r\n            smooth: true\r\n          },\r\n          {\r\n            name: '404',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: originData[\"404\"],\r\n            smooth: true\r\n          }\r\n        ]\r\n      };\r\n      statusRespVolumeChartOption && statusRespVolumeChart.setOption(statusRespVolumeChartOption);\r\n    },\r\n    showUpdateTimingTaskDialog(job) {\r\n      this.timingTask = job;\r\n      this.isAddTimedTaskBtnVisible = true;\r\n    },\r\n    resumeTimedTask(job_name) {\r\n      const that = this;\r\n      request(START_TIMING, METHOD.POST, {\r\n        \"timing_job_name\": job_name\r\n      }).then(function () {\r\n        that.queryAllScheduleTask();\r\n        that.isAddTimedTaskBtnVisible = false;\r\n      });\r\n    },\r\n    pauseTimedTask(job_name) {\r\n      const that = this;\r\n      request(PAUSE_TIMING, METHOD.POST, {\r\n        \"timing_job_name\": job_name\r\n      }).then(function () {\r\n        that.queryAllScheduleTask();\r\n        that.isAddTimedTaskBtnVisible = false;\r\n      });\r\n    },\r\n    addProjectAccount() {\r\n      const that = this;\r\n      let pro_name = that.currentProject.name;\r\n      let account_name = that.newProjectAccount;\r\n      request(UPDATE_PRO_ACCOUNT, METHOD.POST, {\r\n        \"project_name\": pro_name,\r\n        \"update_acc\": {\r\n          \"微博\": {\r\n            \"add\": [account_name],\r\n            \"rm\": []\r\n          }\r\n        }\r\n      }).then(function () {\r\n        that.queryProjectAccount();\r\n        that.isAddPlatformAccountsBtnVisible = false;\r\n      });\r\n    },\r\n    deleteProjectAccount(row) {\r\n      const that = this;\r\n      let pro_name = that.currentProject.name;\r\n      let account_name = row.user;\r\n      request(UPDATE_PRO_ACCOUNT, METHOD.POST, {\r\n        \"project_name\": pro_name,\r\n        \"update_acc\": {\r\n          \"微博\": {\r\n            \"add\": [],\r\n            \"rm\": [account_name]\r\n          }\r\n        }\r\n      }).then(function () {\r\n        that.queryProjectAccount();\r\n        that.isAddPlatformAccountsBtnVisible = false;\r\n      });\r\n    },\r\n    handleClose() {\r\n      this.isAddDistEquipBtnVisible = false;\r\n    },\r\n    queryProjectAccount() {\r\n      const that = this;\r\n      let pro_name = that.currentProject.name;\r\n      request(GET_ACCOUNT_INFO, METHOD.POST, {\r\n        project_name: pro_name\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          let accounts = res.data.account[\"微博\"];\r\n          that.projectAccounts = []\r\n          for (let key in accounts) {\r\n            that.projectAccounts.push(accounts[key]);\r\n          }\r\n        }\r\n      });\r\n      request(GET_ACCOUNT_INFO, METHOD.POST, {\r\n        project_name: \"\"\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          let accounts = res.data.account[\"微博\"];\r\n          that.allAccounts = []\r\n          for (let key in accounts) {\r\n            that.allAccounts.push(accounts[key]);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.queryProjects();\r\n  },\r\n  computed: {\r\n    ...mapState('setting', ['pageMinHeight']),\r\n    desc() {\r\n      return this.$t('description')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import \"index\";\r\n\r\n.box-card {\r\n  margin: 20px;\r\n}\r\n\r\n.tab-title {\r\n  display: flex;\r\n  flex-flow: row;\r\n  padding: 20px 20px 0;\r\n}\r\n\r\n.box-card2 {\r\n  margin: 8px;\r\n}\r\n</style>\r\n"]}]}