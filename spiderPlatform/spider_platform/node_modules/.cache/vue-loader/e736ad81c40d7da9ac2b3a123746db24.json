{"remainingRequest":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project\\spiderPlatform\\spider_platform\\src\\layouts\\header\\AdminHeader.vue?vue&type=style&index=0&id=4ac8b1f9&lang=less&scoped=true&","dependencies":[{"path":"D:\\Project\\spiderPlatform\\spider_platform\\src\\layouts\\header\\AdminHeader.vue","mtime":1651742401307},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\css-loader\\dist\\cjs.js","mtime":1646988174237},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1646988174758},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\postcss-loader\\src\\index.js","mtime":1646988174629},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\less-loader\\dist\\cjs.js","mtime":1646988186378},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\style-resources-loader\\lib\\index.js","mtime":1646988186714},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646988157970},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\index.js","mtime":1646988174758}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkBpbXBvcnQgImluZGV4IjsNCg=="},{"version":3,"sources":["AdminHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA","file":"AdminHeader.vue","sourceRoot":"src/layouts/header","sourcesContent":["<template>\r\n  <a-layout-header :class=\"[headerTheme, 'admin-header']\">\r\n    <div :class=\"['admin-header-wide', layout, pageWidth]\">\r\n      <router-link v-if=\"isMobile || layout === 'head'\" to=\"/\" :class=\"['logo', isMobile ? null : 'pc', headerTheme]\">\r\n        <img width=\"32\" src=\"@/assets/img/logo.png\" />\r\n        <h1 v-if=\"!isMobile\">{{systemName}}</h1>\r\n      </router-link>\r\n      <a-divider v-if=\"isMobile\" type=\"vertical\" />\r\n      <a-icon v-if=\"layout !== 'head'\" class=\"trigger\" :type=\"collapsed ? 'menu-unfold' : 'menu-fold'\" @click=\"toggleCollapse\"/>\r\n      <div v-if=\"layout !== 'side' && !isMobile\" class=\"admin-header-menu\" :style=\"`width: ${menuWidth};`\">\r\n        <i-menu class=\"head-menu\" :theme=\"headerTheme\" mode=\"horizontal\" :options=\"menuData\" @select=\"onSelect\"/>\r\n      </div>\r\n      <div :class=\"['admin-header-right', headerTheme]\">\r\n<!--          <header-search class=\"header-item\" @active=\"val => searchActive = val\" />-->\r\n<!--          <a-tooltip class=\"header-item\" title=\"帮助文档\" placement=\"bottom\" >-->\r\n<!--            <a href=\"https://iczer.gitee.io/vue-antd-admin-docs/\" target=\"_blank\">-->\r\n<!--              <a-icon type=\"question-circle-o\" />-->\r\n<!--            </a>-->\r\n<!--          </a-tooltip>-->\r\n<!--          <header-notice class=\"header-item\"/>-->\r\n          <header-avatar class=\"header-item\"/>\r\n<!--          <a-dropdown class=\"lang header-item\">-->\r\n<!--            <div>-->\r\n<!--              <a-icon type=\"global\"/> {{langAlias}}-->\r\n<!--            </div>-->\r\n<!--            <a-menu @click=\"val => setLang(val.key)\" :selected-keys=\"[lang]\" slot=\"overlay\">-->\r\n<!--              <a-menu-item v-for=\" lang in langList\" :key=\"lang.key\">{{lang.key.toLowerCase() + ' ' + lang.name}}</a-menu-item>-->\r\n<!--            </a-menu>-->\r\n<!--          </a-dropdown>-->\r\n      </div>\r\n    </div>\r\n  </a-layout-header>\r\n</template>\r\n\r\n<script>\r\n// import HeaderSearch from './HeaderSearch'\r\n// import HeaderNotice from './HeaderNotice'\r\nimport HeaderAvatar from './HeaderAvatar'\r\nimport IMenu from '@/components/menu/menu'\r\nimport {mapState, mapMutations} from 'vuex'\r\n\r\nexport default {\r\n  name: 'AdminHeader',\r\n  components: {IMenu, HeaderAvatar,},\r\n  props: ['collapsed', 'menuData'],\r\n  data() {\r\n    return {\r\n      langList: [\r\n        {key: 'CN', name: '简体中文', alias: '简体'},\r\n        {key: 'HK', name: '繁體中文', alias: '繁體'},\r\n        {key: 'US', name: 'English', alias: 'English'}\r\n      ],\r\n      searchActive: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState('setting', ['theme', 'isMobile', 'layout', 'systemName', 'lang', 'pageWidth']),\r\n    headerTheme () {\r\n      if (this.layout == 'side' && this.theme.mode == 'dark' && !this.isMobile) {\r\n        return 'light'\r\n      }\r\n      return this.theme.mode\r\n    },\r\n    langAlias() {\r\n      let lang = this.langList.find(item => item.key == this.lang)\r\n      return lang.alias\r\n    },\r\n    menuWidth() {\r\n      const {layout, searchActive} = this\r\n      const headWidth = layout === 'head' ? '100% - 188px' : '100%'\r\n      const extraWidth = searchActive ? '600px' : '400px'\r\n      return `calc(${headWidth} - ${extraWidth})`\r\n    }\r\n  },\r\n  methods: {\r\n    toggleCollapse () {\r\n      this.$emit('toggleCollapse')\r\n    },\r\n    onSelect (obj) {\r\n      this.$emit('menuSelect', obj)\r\n    },\r\n    ...mapMutations('setting', ['setLang'])\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n@import \"index\";\r\n</style>\r\n"]}]}