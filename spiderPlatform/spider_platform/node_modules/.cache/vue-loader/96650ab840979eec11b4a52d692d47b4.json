{"remainingRequest":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project\\spiderPlatform\\spider_platform\\src\\pages\\proj_manage\\index.vue?vue&type=template&id=4ce23314&","dependencies":[{"path":"D:\\Project\\spiderPlatform\\spider_platform\\src\\pages\\proj_manage\\index.vue","mtime":1657524339971},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646988157970},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1646988174758},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646988157970},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\index.js","mtime":1646988174758}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}