{"remainingRequest":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project\\spiderPlatform\\spider_platform\\src\\components\\menu\\Contextmenu.vue?vue&type=style&index=0&id=113a23ce&lang=less&scoped=true&","dependencies":[{"path":"D:\\Project\\spiderPlatform\\spider_platform\\src\\components\\menu\\Contextmenu.vue","mtime":1646988546810},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\css-loader\\dist\\cjs.js","mtime":1646988174237},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1646988174758},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\postcss-loader\\src\\index.js","mtime":1646988174629},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\less-loader\\dist\\cjs.js","mtime":1646988186378},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\style-resources-loader\\lib\\index.js","mtime":1646988186714},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646988157970},{"path":"D:\\Project\\spiderPlatform\\spider_platform\\node_modules\\vue-loader\\lib\\index.js","mtime":1646988174758}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY29udGV4dG1lbnV7CiAgcG9zaXRpb246IGZpeGVkOwogIHotaW5kZXg6IDEwMDA7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGJveC1zaGFkb3c6IC00cHggNHB4IDE2cHggMXB4IEBzaGFkb3ctY29sb3IgIWltcG9ydGFudDsKfQouYW50LW1lbnUtaXRlbSB7CiAgbWFyZ2luOiAwICFpbXBvcnRhbnQgLy8g6I+c5Y2V6aG55LmL6Ze055qE57yd6ZqZ5Lya5b2x5ZON54K55Ye7Cn0K"},{"version":3,"sources":["Contextmenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Contextmenu.vue","sourceRoot":"src/components/menu","sourcesContent":["<template>\r\n  <a-menu\r\n    v-show=\"visible\"\r\n    class=\"contextmenu\"\r\n    :style=\"style\"\r\n    :selectedKeys=\"selectedKeys\"\r\n    @click=\"handleClick\"\r\n  >\r\n    <a-menu-item :key=\"item.key\" v-for=\"item in itemList\">\r\n      <a-icon v-if=\"item.icon\" :type=\"item.icon\" />\r\n      <span>{{ item.text }}</span>\r\n    </a-menu-item>\r\n  </a-menu>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Contextmenu',\r\n  props: {\r\n    visible: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    itemList: {\r\n      type: Array,\r\n      required: true,\r\n      default: () => []\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      left: 0,\r\n      top: 0,\r\n      target: null,\r\n      meta: null,\r\n      selectedKeys: []\r\n    }\r\n  },\r\n  computed: {\r\n    style () {\r\n      return {\r\n        left: this.left + 'px',\r\n        top: this.top + 'px'\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    window.addEventListener('click', this.closeMenu)\r\n    window.addEventListener('contextmenu', this.setPosition)\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('click', this.closeMenu)\r\n    window.removeEventListener('contextmenu', this.setPosition)\r\n  },\r\n  methods: {\r\n    closeMenu () {\r\n      this.$emit('update:visible', false)\r\n    },\r\n    setPosition (e) {\r\n      this.left = e.clientX\r\n      this.top = e.clientY\r\n      this.target = e.target\r\n      this.meta = e.meta\r\n    },\r\n    handleClick ({ key }) {\r\n      this.$emit('select', key, this.target, this.meta)\r\n      this.closeMenu()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .contextmenu{\r\n    position: fixed;\r\n    z-index: 1000;\r\n    border-radius: 4px;\r\n    box-shadow: -4px 4px 16px 1px @shadow-color !important;\r\n  }\r\n  .ant-menu-item {\r\n    margin: 0 !important // 菜单项之间的缝隙会影响点击\r\n  }\r\n</style>\r\n"]}]}